{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"swa",
				"swayEngeryPuckIds"
			],
			[
				"_s",
				"_speedPenalty"
			],
			[
				"selec",
				"select_random"
			],
			[
				"sele",
				"select_novelty"
			],
			[
				"_ac",
				"_activeGenome"
			],
			[
				"sim",
				"simSensorResults"
			],
			[
				"sen",
				"sensorToUse"
			],
			[
				"line",
				"linestream"
			],
			[
				"load",
				"loadSimSensorCSV"
			],
			[
				"get",
				"getline"
			],
			[
				"gene",
				"geneToUse"
			],
			[
				"feat",
				"features_selected"
			],
			[
				"train_",
				"train_X"
			],
			[
				"test",
				"test_set"
			],
			[
				"pred",
				"predictions"
			],
			[
				"predic",
				"predictions"
			],
			[
				"trai",
				"X_train"
			],
			[
				"tr",
				"trn_idx"
			],
			[
				"targets",
				"targets"
			],
			[
				"preds",
				"preds2"
			],
			[
				"data",
				"data_X"
			],
			[
				"tst",
				"tst_predicts"
			],
			[
				"y",
				"y_pred"
			],
			[
				"to",
				"tolist"
			],
			[
				"tar",
				"target_idx"
			],
			[
				"tst_",
				"tst_targets"
			],
			[
				"Dat",
				"DataFrame"
			],
			[
				"cross",
				"cross_validation"
			],
			[
				"de",
				"description_score_low"
			],
			[
				"high",
				"high_rate"
			],
			[
				"med",
				"med_rate"
			],
			[
				"low",
				"low_rate"
			],
			[
				"tra",
				"train_dict"
			],
			[
				"train_d",
				"train_dict"
			],
			[
				"ma",
				"make_description_dict"
			],
			[
				"tes",
				"test_results"
			],
			[
				"hi",
				"high_socre"
			],
			[
				"me",
				"med_score"
			],
			[
				"des",
				"description"
			],
			[
				"di",
				"description"
			],
			[
				"desc",
				"description"
			],
			[
				"descr",
				"descriptions_tokenized"
			],
			[
				"stop",
				"stop_words"
			],
			[
				"mean",
				"mean_price"
			],
			[
				"col",
				"col_names"
			],
			[
				"predi",
				"predictions"
			],
			[
				"ins",
				"interest_level"
			],
			[
				"pre",
				"predictions"
			],
			[
				"res",
				"result_pos"
			],
			[
				"result",
				"result_pos"
			],
			[
				"tot",
				"total_best_scores"
			],
			[
				"best",
				"best_conf"
			],
			[
				"ne",
				"new_layers"
			],
			[
				"layers",
				"layers3"
			],
			[
				"be",
				"best_nn"
			],
			[
				"bes",
				"best_score"
			],
			[
				"test_",
				"test_targets"
			],
			[
				"X",
				"X_val"
			],
			[
				"rand",
				"random_state"
			],
			[
				"as",
				"asarray"
			],
			[
				"int",
				"interest_level"
			],
			[
				"eval",
				"eval_df"
			],
			[
				"text",
				"text_clf"
			],
			[
				"cats",
				"cat_with_quartiles"
			],
			[
				"train",
				"train_df"
			],
			[
				"fe",
				"feat_high2"
			],
			[
				"x",
				"x_tf"
			],
			[
				"svm",
				"svm_clf"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Searching 675 files for \"_lastYPos\"\n\n/Users/manu/git/monee-novelty/include/core/RoboroboMain/roborobo.h:\n  131:     double _distance, _lastXPos, _lastYPos;\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  179: \t_activeGenome._lastYPos = _wm->getYReal();\n  616: \t\tdouble dy = _activeGenome._lastYPos - _wm->getYReal();\n  619: \t\t_activeGenome._lastYPos = _wm->getYReal();\n\n4 matches across 2 files\n\n\nSearching 675 files for \"reset\"\n\n/Users/manu/git/monee-novelty/roborobo:\n    <binary>\n\n/Users/manu/git/monee-novelty/include/contrib/Organism.h:\n   52: \tstatic void reset();\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/Evolver.h:\n  600: \t/// current iteration (reset for every evaluation)\n  628: \t * Evolution is reset when _generationsPerExperiment have passed. Set to 0 for neverending evolution.\n  650: \t * Initialises the genomes, resets all fitnesses, etc.\n  656: \t\t\t_genomeReservoir[i].reset();\n  696: \t\t_currentFitness = _genome._minFitness; // reset fitness\n  803: \t\tLOG << \"# Evolution is reset every \" << _generationsPerExperiment << \" evaluations.\\n\";\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/Genome.h:\n   50: \t\treset();\n   56: \t\treset();\n  263: \tvoid reset(void)\n  265: \t\treset(0.8);\n  269:     void reset(double sigma)\n  309:      * @note You must re-initialise by calling \\c reset() the genome for changes in the Initialiser to have any effect.\n  366:     /// Indicates whether or not the fitness has been set since initialisation or the last reset()\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/NeuralNetGenome.h:\n   84: \t\treset();\n  169: \t\treset();\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/lioutilities/lioutils/Fixed32.h:\n   69: //\t\t\t- It is the user responsability to check for the approximation flag (through the isApproximate/resetApproximateFlag methods)\n  162: \t\tvoid resetOverflowFlag( ); // set overflow flag to false\n  164: \t\tvoid resetDivideByZeroFlag( ); // set dividebyzero flag to false\n  166: \t\tvoid resetApproximateFlag( ); // set overflow flag to false\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/lioutilities/src/Fixed32.cpp:\n  360: void Fixed32::resetApproximateFlag( )\n  370: void Fixed32::resetOverflowFlag( )\n  380: void Fixed32::resetDivideByZeroFlag( )\n  654: \tc.resetDivideByZeroFlag();\n\n/Users/manu/git/monee-novelty/include/core/Agents/Agent.h:\n   35: \tvirtual void reset() = 0;\n\n/Users/manu/git/monee-novelty/include/core/Agents/InspectorAgent.h:\n   34: \t\tvoid reset();\n\n/Users/manu/git/monee-novelty/include/core/Agents/RobotAgent.h:\n   87: \tvoid reset();\n  114: \tvoid resetFitness(); // prepare fitness for start-up (init or reset)\n\n/Users/manu/git/monee-novelty/include/core/BehaviorControlArchitectures/BehaviorControlArchitecture.h:\n   30: \t\tvirtual void reset() = 0;\n\n/Users/manu/git/monee-novelty/include/core/Observers/AgentObserver.h:\n   32: \t\tvirtual void reset();\n\n/Users/manu/git/monee-novelty/include/core/Observers/Observer.h:\n   24: \t\tvirtual void reset();\n\n/Users/manu/git/monee-novelty/include/core/Observers/WorldObserver.h:\n   33: \t\tvirtual void reset();\n\n/Users/manu/git/monee-novelty/include/core/RoboroboMain/roborobo.h:\n  285: void resetRoboroboWorld();\n\n/Users/manu/git/monee-novelty/include/core/World/World.h:\n   60: \t\tvoid resetWorld();\n\n/Users/manu/git/monee-novelty/include/ext/BehaviorControlArchitectures/PerceptronBehaviorControlArchitecture.h:\n   34: \t\tvoid reset();\n\n/Users/manu/git/monee-novelty/include/ext/rjh/DifferentialControlArchitecture.h:\n   45: \tvirtual void reset() = 0;\n\n/Users/manu/git/monee-novelty/include/ext/rjh/EvolutionaryControlArchitecture.h:\n   38: \tvirtual void reset();\n\n/Users/manu/git/monee-novelty/include/ext/Utils/Controller.h:\n   37: \tvirtual void reset() = 0;\n\n/Users/manu/git/monee-novelty/include/ext/Utils/NeuralController.h:\n   45: \tvirtual void reset();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentObserver.h:\n   31: \t\tvoid reset();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentWorldModel.h:\n   59:         void reset(int maxLifetime[]);\n   62:         double _maxLifetime; /// < The original maximum lifetime as determined in reset()\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsControlArchitecture.h:\n   57:         \tvoid reset();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsWorldObserver.h:\n   25: \t\tvoid reset();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentObserver.cpp:\n   19: void SimpleShellsAgentObserver::reset()\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentWorldModel.cpp:\n   94: void SimpleShellsAgentWorldModel::reset(int maxLifetime[]) {\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  168: void SimpleShellsControlArchitecture::reset() {\n  172: \t_wm->reset(_maxLifetime);\n  587: \t\t\treset();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsWorldObserver.cpp:\n   16: void SimpleShellsWorldObserver::reset()\n\n/Users/manu/git/monee-novelty/src/contrib/Organism.cpp:\n   46: void Organism::reset() {\n\n/Users/manu/git/monee-novelty/src/core/AgentObserver.cpp:\n   28: void AgentObserver::reset()\n\n/Users/manu/git/monee-novelty/src/core/InspectorAgent.cpp:\n   15: \treset();\n   19: void InspectorAgent::reset()\n\n/Users/manu/git/monee-novelty/src/core/Observer.cpp:\n   22: void Observer::reset()\n\n/Users/manu/git/monee-novelty/src/core/roborobo.cpp:\n  209: float gMaxTranslationalSpeed = 2; // pixels/sec. (presets: 20, 5, ...)\n  211: float gMaxRotationalSpeed = 20; // degrees/sec. (presets: 20, 50, ...)\n  346: \t\tstd::cout << \"       r : reset agents/environment\" << std::endl;\n  419: \t\t\tstd::cout << \"Reset!\" << std::endl;\n  421: \t\tgWorld->resetWorld();\n 1564: void resetRoboroboWorld() {\n 1565: \tgWorld->resetWorld();\n\n/Users/manu/git/monee-novelty/src/core/RobotAgent.cpp:\n  136: \treset();\n  147: void RobotAgent::reset() {\n  167: \t\t\tstd::cout << \"[warning] Initial X coordinate for agent #\" << _wm->_agentId << \" not found. Random pick ([!] reset may alter environment, check with x-ray mode [!]).\" << std::endl;\n  180: \t\t\tstd::cout << \"[warning] Initial Y coordinate for agent #\" << _wm->_agentId << \" not found. Random pick ([!] reset may alter environment, check with x-ray mode [!]).\" << std::endl;\n  247: \t_agentObserver->reset();\n  248: \t_behavior->reset();\n\n/Users/manu/git/monee-novelty/src/core/Timer.cpp:\n   62:         //Reset the starting ticks\n   65:         //Reset the paused ticks\n\n/Users/manu/git/monee-novelty/src/core/World.cpp:\n  121: \t\tOrganism::reset();\n  124: \t_worldObserver->reset();\n  127: void World::resetWorld() {\n  134: \t\tagents[i]->reset();\n  142: \t\tOrganism::reset();\n\n/Users/manu/git/monee-novelty/src/core/WorldObserver.cpp:\n   25: void WorldObserver::reset()\n\n/Users/manu/git/monee-novelty/src/ext/PerceptronBehaviorControlArchitecture.cpp:\n   25: void PerceptronBehaviorControlArchitecture::reset()\n   39: \t\treset();\n\n/Users/manu/git/monee-novelty/src/ext/rjh/EvolutionaryControlArchitecture.cpp:\n   37: \t\t\tcandidate->reset();\n   75: \t\t\t// reset the counters\n  170: void EvolutionaryControlArchitecture::reset(){\n  171: \tcandidate.reset();\n\n/Users/manu/git/monee-novelty/src/ext/Utils/NeuralController.cpp:\n   90: void NeuralController::reset() {\n\n105 matches across 41 files\n\n\nSearching 695 files for \"ACTION_ACTIVATE\"\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentWorldModel.h:\n   12: enum {ACTION_ACTIVATE, ACTION_GATHER, ACTION_BRAKE, ACTION_MATE, ACTION_SELECT, ACTION_SIZE};\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentWorldModel.cpp:\n   10: \t_action = ACTION_ACTIVATE;\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  591: \t\tcase ACTION_ACTIVATE :\n\n3 matches across 3 files\n\n\nSearching 695 files for \"ACTION_ACTIVATE\"\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentWorldModel.h:\n   12: enum {ACTION_ACTIVATE, ACTION_GATHER, ACTION_BRAKE, ACTION_MATE, ACTION_SELECT, ACTION_SIZE};\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentWorldModel.cpp:\n   10: \t_action = ACTION_ACTIVATE;\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  591: \t\tcase ACTION_ACTIVATE :\n\n3 matches across 3 files\n\n\nSearching 695 files for \"_wm\"\n\n/Users/manu/git/monee-novelty/roborobo:\n    <binary>\n\n/Users/manu/git/monee-novelty/include/contrib/newscast/PopulationControlArchitecture.h:\n   37: \tPopulationControlArchitecture( RobotAgentWorldModel *__wm );\n\n/Users/manu/git/monee-novelty/include/core/Agents/RobotAgent.h:\n   62: \tRobotAgentWorldModel *_wm;\n\n/Users/manu/git/monee-novelty/include/core/BehaviorControlArchitectures/BehaviorControlArchitecture.h:\n   22: \t\tRobotAgentWorldModel *_wm;\n   27: \t\tBehaviorControlArchitecture( RobotAgentWorldModel *__wm );\n\n/Users/manu/git/monee-novelty/include/core/Observers/AgentObserver.h:\n   24: \t\tEvolvingRobotAgentWorldModel *_wm;\n   29: \t\tAgentObserver( RobotAgentWorldModel *__wm );\n\n/Users/manu/git/monee-novelty/include/core/World/RobotAgentWorldInterface.h:\n   32: \t\tvoid applyStream(RobotAgentWorldModel *__wm);\n\n/Users/manu/git/monee-novelty/include/ext/BehaviorControlArchitectures/PerceptronBehaviorControlArchitecture.h:\n   26: \t\tEvolvingRobotAgentWorldModel *_wm;\n   31: \t\tPerceptronBehaviorControlArchitecture( RobotAgentWorldModel *__wm );\n   35: \t\tvoid step();\t\t// if (_wm._age<0) then move randomly (useful to unstuck robot in evolution mode)\n\n/Users/manu/git/monee-novelty/include/ext/rjh/DifferentialControlArchitecture.h:\n   42: \tDifferentialControlArchitecture( RobotAgentWorldModel *__wm );\n\n/Users/manu/git/monee-novelty/include/ext/rjh/EvolutionaryControlArchitecture.h:\n   34: \tEvolutionaryControlArchitecture( RobotAgentWorldModel *__wm );\n\n/Users/manu/git/monee-novelty/include/ext/Utils/Controller.h:\n   43: \tvirtual void setWorldModel(RobotAgentWorldModel *__wm);\n   67: \tRobotAgentWorldModel *_wm;\n\n/Users/manu/git/monee-novelty/include/ext/Utils/Util.h:\n   42: \t\tstatic NeuralControllerPtr createRandomGenome(RobotAgentWorldModel *__wm);\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentObserver.h:\n   23: \tSimpleShellsAgentWorldModel\t*_wm;\n   28: \t\tSimpleShellsAgentObserver( RobotAgentWorldModel *__wm );\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsControlArchitecture.h:\n   25:         SimpleShellsAgentWorldModel* _wm;\n   52: \t\tSimpleShellsControlArchitecture(RobotAgentWorldModel *__wm);\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentObserver.cpp:\n    9: SimpleShellsAgentObserver::SimpleShellsAgentObserver( RobotAgentWorldModel *__wm )\n   11: \t_wm = (SimpleShellsAgentWorldModel*)__wm;\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  107: SimpleShellsControlArchitecture::SimpleShellsControlArchitecture( RobotAgentWorldModel *__wm ) : BehaviorControlArchitecture ( __wm ) {\n  108: \t_wm = (SimpleShellsAgentWorldModel*)__wm;\n  136: \t\t_parameterCount = ((_wm->_sensorCount * (gPuckColors + 1) + 1 + 2) * _hiddenNeuronCount + (_hiddenNeuronCount + 1) * 2 ); //manuel: 1 more for direction change\n  139: \t\t_parameterCount = 2 + (_wm->_sensorCount * (gPuckColors + 1) + 1 + 2) * 2;\n  144: \t_wm->_genePool.reserve(gMaxGenePool);\n  153: \t_wm->_puckCounters = &(_activeGenome.pucks);\n  172: \t_wm->reset(_maxLifetime);\n  178: \t_activeGenome._lastXPos = _wm->getXReal();\n  179: \t_activeGenome._lastYPos = _wm->getYReal();\n  185: \t// std::cout << \"[descendant] \" <<  _wm->_world->getIterations() << ' ' << _wm->_winnerId << ' ' << _activeGenome.id << '\\n';\n  193:         // std::cout << \"[gathered] \" << _wm->_world->getIterations() << ' ' << _activeGenome.id;\n  195:         //         if (i == _wm->_energyPuckId && _wm->_excludeEnergyPucks)\n  196:         //                 // std::cout << ' ' << _wm->_nrBoosts;\n  249: \t\t\tif (i != _wm->_energyPuckId  || !_wm->_excludeEnergyPucks) {\n  258: \t\tif (i != _wm->_energyPuckId  || !_wm->_excludeEnergyPucks) {\n  270: \t\tif (i != _wm->_energyPuckId || !_wm->_excludeEnergyPucks) {\n  292: \t\t\tif (i != _wm->_energyPuckId || !_wm->_excludeEnergyPucks) {\n  326: \t\t\tif (isRadioConnection(agent->getWorldModel()->_agentId,_wm->_agentId)) {\n  346: \t\tfor (itGatheredGenomes = _wm->_genePool.begin(); itGatheredGenomes < _wm->_genePool.end(); itGatheredGenomes++) {\n  354: \t\t\t_wm->_genePool.push_back(**itNewGenomes);\n  355: \t\t\tGenome & genome = _wm->_genePool.back();\n  359: \t\t\tif (_wm->_genePool.size() == gMaxGenePool) {\n  362: \t\t\t\t_wm->_lifetime[_wm->_phase] = 0;\n  383: \t\t\t_response[n] += parameters[geneToUse++] * _wm->_desiredRotationalVelocity / gMaxRotationalSpeed;\n  384: \t\t\t_response[n] += parameters[geneToUse++] * _wm->_desiredTranslationalValue / gMaxTranslationalSpeed;\n  391: \t\tfor (int s = 0; s < _wm->_sensorCount; s++) {\n  392: \t\t\tdouble normObstacleRange = _wm->_rangeSensors[s]->getNormObstacleRange();\n  397: \t\t\t\tdouble normPuckRange = _wm->_rangeSensors[s]->getNormPuckRange(c);\n  413: \t} else if (_wm->_agentId == 1) {\n  415: \t\t//std::cout << _wm->_desiredRotationalVelocity << \",\" << _wm->_desiredTranslationalValue << \",\";\n  416: \t\ttrans += parameters[geneToUse++] * _wm->_desiredRotationalVelocity / gMaxRotationalSpeed;\n  417: \t\ttrans += parameters[geneToUse++] * _wm->_desiredTranslationalValue / gMaxTranslationalSpeed;\n  418: \t\trotor += parameters[geneToUse++] * _wm->_desiredRotationalVelocity / gMaxRotationalSpeed;\n  419: \t\trotor += parameters[geneToUse++] * _wm->_desiredTranslationalValue / gMaxTranslationalSpeed;\n  420: \t\tfor (int s = 0; s < _wm->_sensorCount; s++) {\n  421: \t\t\tdouble normObstacleRange = _wm->_rangeSensors[s]->getNormObstacleRange();\n  425: \t\t\t\tdouble normPuckRange = _wm->_rangeSensors[s]->getNormPuckRange(c);\n  432: \t\ttrans += parameters[geneToUse++] * _wm->_desiredRotationalVelocity / gMaxRotationalSpeed;\n  433: \t\ttrans += parameters[geneToUse++] * _wm->_desiredTranslationalValue / gMaxTranslationalSpeed;\n  434: \t\trotor += parameters[geneToUse++] * _wm->_desiredRotationalVelocity / gMaxRotationalSpeed;\n  435: \t\trotor += parameters[geneToUse++] * _wm->_desiredTranslationalValue / gMaxTranslationalSpeed;\n  436: \t\tfor (int s = 0; s < _wm->_sensorCount; s++) {\n  437: \t\t\tdouble normObstacleRange = _wm->_rangeSensors[s]->getNormObstacleRange();\n  441: \t\t\t\tdouble normPuckRange = _wm->_rangeSensors[s]->getNormPuckRange(c);\n  464: \t_wm->_desiredTranslationalValue = trans * gMaxTranslationalSpeed * _wm->_speedPenalty ;\n  465: \t_wm->_desiredRotationalVelocity = rotor * gMaxRotationalSpeed * _wm->_speedPenalty;\n  469: \t// std::cout << \"translational \" << _wm->_desiredTranslationalValue << std::endl;\n  470: \t// std::cout << \"velocity  \" << _wm->_desiredRotationalVelocity << std::endl;\n  501: \t\ttrans += parameters[geneToUse++] * _wm->_desiredRotationalVelocity / gMaxRotationalSpeed;\n  502: \t\ttrans += parameters[geneToUse++] * _wm->_desiredTranslationalValue / gMaxTranslationalSpeed;\n  503: \t\trotor += parameters[geneToUse++] * _wm->_desiredRotationalVelocity / gMaxRotationalSpeed;\n  504: \t\trotor += parameters[geneToUse++] * _wm->_desiredTranslationalValue / gMaxTranslationalSpeed;\n  506: \t\tfor (int s = 0; s < _wm->_sensorCount; s++) {\n  529: \t// if (_wm->_agentId == 1) {\n  542: \tassignFitness(_wm->_genePool);\n  544: \tstd::sort(_wm->_genePool.begin(), _wm->_genePool.end(), genomeSortPredicate);\n  545: \tstd::vector<Genome>::const_iterator winner = selectWeighted(_wm->_genePool);\n  546: \t_wm->_winnerId = winner->id;\n  560: \t_wm->dumpGenePoolStats();\n  579: \tif (_wm->_action == ACTION_GATHER && Rand::randouble() < randomDeathProb) {\n  580: \t\t_wm->_lifetime[PHASE_GATHERING] = 1;\n  586: \t\tswitch (_wm->_action) {\n  589: \t\t\t_wm->advance();\n  593: \t\t\t_wm->_phase = PHASE_GATHERING;\n  594: \t\t\t_wm->setRobotLED_colorValues(34, 139, 34);\n  595: \t\t\t_wm->advance();\n  600: \t\t\t_wm->advance();\n  605: \t\t\t_wm->_desiredTranslationalValue = 0;\n  606: \t\t\t_wm->_desiredRotationalVelocity = 0;\n  607: \t\t\t_wm->_phase = PHASE_MATING;\n  608: \t\t\t_wm->setRobotLED_colorValues(255, 69, 0);\n  609: \t\t\t_wm->advance();\n  614: \t\t\tif (_wm->advance() > 0) done = true;\n  620: \t\tdouble dx = _activeGenome._lastXPos - _wm->getXReal();\n  621: \t\tdouble dy = _activeGenome._lastYPos - _wm->getYReal();\n  623: \t\t_activeGenome._lastXPos = _wm->getXReal();\n  624: \t\t_activeGenome._lastYPos = _wm->getYReal();\n  629: \t\t// std::cout << \"[position] \" << gWorld->getIterations() << ' ' << _activeGenome.id << ' ' <<_wm->getXReal() << ' ' << _wm->getYReal() << '\\n';\n\n/Users/manu/git/monee-novelty/src/contrib/newscast/PopulationControlArchitecture.cpp:\n   19: PopulationControlArchitecture::PopulationControlArchitecture(RobotAgentWorldModel *__wm) : EvolutionaryControlArchitecture(__wm) {\n\n/Users/manu/git/monee-novelty/src/core/AgentObserver.cpp:\n   18: AgentObserver::AgentObserver( RobotAgentWorldModel *__wm )\n   20: \t_wm = (EvolvingRobotAgentWorldModel*)__wm;\n\n/Users/manu/git/monee-novelty/src/core/BehaviorControlArchitecture.cpp:\n   18: BehaviorControlArchitecture::BehaviorControlArchitecture( RobotAgentWorldModel *__wm ) \n   20: \t_wm = __wm;\n\n/Users/manu/git/monee-novelty/src/core/RobotAgent.cpp:\n   31: \t_wm = gConfigurationLoader->make_RobotAgentWorldModel(); // TODO: externalize object referenced to create the new instance\n   34: \t_wm->_world = __world;\n   36: \t_wm->_agentId = gAgentCounter;\n   46: \t_wm->_sensorCount = 0;\n   54: \t\t\t\t_wm->_sensorCount++;\n   57: \t_wm->_sensors = new double[_wm->_sensorCount][7]; // see header for details.\n   58: \t_wm->_ditchSensor = new double[_wm->_sensorCount];\n   60: \t_wm->_rangeSensors.resize(_wm->_sensorCount, 0); // Because we can't use push_back -- we might go through the sensors in any random order.\n   62: \tfor (int i = 0; i < _wm->_sensorCount; i++) {\n   63: \t\t_wm->_sensors[i][0] = -1;\n   65: \t\t_wm->_sensors[i][5] = -1;\n   66: \t\t_wm->_sensors[i][6] = -1;\n   68: \t\t_wm->_ditchSensor[i] = -1;\n   81: \t\t\t\tif (_wm->_sensors[r][0] != -1) {\n   86: \t\t\t\tif (r >= _wm->_sensorCount) {\n   87: \t\t\t\t\tstd::cout << \"[ERROR] robot sensor id is not permitted (must be defined btw 0 and \" << (_wm->_sensorCount - 1) << \", got: \" << r << \") -- check agent specification image.\" << std::endl;\n  125: \t\t\t\t_wm->_rangeSensors[sensorId] = new RangeSensor(sensorId, originDistance, originAngle, targetDistance, targetAngle, gSensorRange);\n  126: \t\t\t\t_wm->_rangeSensors[sensorId]->getOldSensorData(_wm->_sensors[sensorId]);\n  133: \t_agentObserver = gConfigurationLoader->make_AgentObserver(_wm); // TODO: externalize\n  134: \t_behavior = gConfigurationLoader->make_BehaviorControlArchitecture(_wm); // TODO: externalize\n  143: \tdelete _wm;\n  150: \t_wm->_isAlive = true;\n  158: \tout << _wm->_agentId;\n  167: \t\t\tstd::cout << \"[warning] Initial X coordinate for agent #\" << _wm->_agentId << \" not found. Random pick ([!] reset may alter environment, check with x-ray mode [!]).\" << std::endl;\n  180: \t\t\tstd::cout << \"[warning] Initial Y coordinate for agent #\" << _wm->_agentId << \" not found. Random pick ([!] reset may alter environment, check with x-ray mode [!]).\" << std::endl;\n  200: \t//_wm->_xReal = x;\n  201: \t//_wm->_yReal = y;\n  205: \t//_wm->_xReal=gAgentXStart;\n  206: \t//_wm->_yReal=gAgentYStart;\n  219: \t\tconvertFromString<double>(_wm->_agentAbsoluteOrientation, gProperties.getProperty(s), std::dec);\n  222: \t\t\tstd::cout << \"[warning] Initial orientation  for agent #\" << _wm->_agentId << \" not found. Random pick.\" << std::endl;\n  224: \t\t_wm->_agentAbsoluteOrientation = ranf() * 360. - 180.;\n  227: \t_wm->_agentAbsoluteLinearSpeed = 0;\n  229: \t_wm->_desiredRotationalVelocity = 0;\n  230: \t_wm->_desiredTranslationalValue = 0;\n  232: \t_wm->_maxRotationalDeltaValue = gMaxRotationalSpeed; // ie. change will be instantenous\n  233: \t_wm->_maxTranslationalDeltaValue = gMaxTranslationalDeltaValue; //gMaxTranslationalSpeed ; // idem.\n  235: \t_wm->_actualTranslationalValue = 0;\n  236: \t_wm->_actualRotationalVelocity = 0;\n  238: \tfor (int i = 0; i != _wm->_sensorCount; i++) // initialize sensor values to max range, no contact\n  240: \t\t_wm->_sensors[i][5] = gSensorRange; // range: max\n  241: \t\t_wm->_sensors[i][6] = 0; // type:  none\n  243: \t_wm->_floorSensor = 0; // floor sensor value (taken from gZoneImage)\n  254: \t// _wm->prepareShutdown();\n  268: \tif (_wm->_isAlive) // note: reviving a robot is performed in stepGenetics()\n  288: \t\tif (gInspectAgent && gAgentIndexFocus == _wm->_agentId) {\n  289: \t\t\tstd::cout << \"Robot #\" << _wm->_agentId << \" : ( \";\n  290: \t\t\tfor (int i = 0; i != _wm->_sensorCount; i++) {\n  291: \t\t\t\tstd::cout << _wm->getSensorDistanceValue(i) << \"/\" << _wm->getSensorMaximumDistanceValue(i) << \" \";\n  293: \t\t\tstd::cout << \" ) => ( \" << _wm->_desiredTranslationalValue << \" ; \" << _wm->_desiredRotationalVelocity << \" ).\" << std::endl;\n  299: \tif (gAgentIndexFocus != _wm->_agentId)\n  311: \t\t_wm->_desiredTranslationalValue += 1; // pixels\n  313: \t\t_wm->_desiredTranslationalValue += -1;\n  315: \tif (_wm->_desiredTranslationalValue > gMaxTranslationalSpeed)\n  316: \t\t_wm->_desiredTranslationalValue = gMaxTranslationalSpeed;\n  318: \t\tif (_wm->_desiredTranslationalValue < -gMaxTranslationalSpeed)\n  319: \t\t\t_wm->_desiredTranslationalValue = -gMaxTranslationalSpeed;\n  322: \t\t_wm->_desiredRotationalVelocity = -10; // degrees\n  324: \t\t_wm->_desiredRotationalVelocity = 10;\n  327: \t\t_wm->_desiredTranslationalValue = 0;\n  330: \t\tif (_wm->_desiredRotationalVelocity > 0)\n  331: \t\t\t_wm->_desiredRotationalVelocity--;\n  333: \t\t\tif (_wm->_desiredRotationalVelocity < 0)\n  334: \t\t\t\t_wm->_desiredRotationalVelocity++;\n  338: \t\t_wm->_desiredTranslationalValue = 0;\n  339: \t\t_wm->_desiredRotationalVelocity = 0;\n  353: \tthis->_lastAgentAbsoluteOrientation = _wm->_agentAbsoluteOrientation; // in case of collision, original orientation should be restored.\n  358: \t_wm->_actualTranslationalValue = _wm->_agentAbsoluteLinearSpeed;\n  360: \tif (_wm->_desiredTranslationalValue != _wm->_agentAbsoluteLinearSpeed) {\n  361: \t\tdouble diff = fabs(_wm->_desiredTranslationalValue - _wm->_agentAbsoluteLinearSpeed); // Note: using abs(...) would truncate to integer. Use fabs instead. (minor bug solved as of 2010 06 18)\n  363: \t\tif (_wm->_desiredTranslationalValue > _wm->_agentAbsoluteLinearSpeed) {\n  364: \t\t\tif (diff > _wm->_maxTranslationalDeltaValue)\n  365: \t\t\t\t_wm->_actualTranslationalValue += _wm->_maxTranslationalDeltaValue;\n  367: \t\t\t\t_wm->_actualTranslationalValue += diff;\n  370: \t\t\tif (diff > _wm->_maxTranslationalDeltaValue)\n  371: \t\t\t\t_wm->_actualTranslationalValue -= _wm->_maxTranslationalDeltaValue;\n  373: \t\t\t\t_wm->_actualTranslationalValue -= diff;\n  377: \t\tif (_wm->_actualTranslationalValue > gMaxTranslationalSpeed)\n  378: \t\t\t_wm->_actualTranslationalValue = gMaxTranslationalSpeed;\n  380: \t\t\tif (_wm->_actualTranslationalValue < -gMaxTranslationalSpeed)\n  381: \t\t\t\t_wm->_actualTranslationalValue = -gMaxTranslationalSpeed;\n  387: \tif (_wm->_desiredRotationalVelocity > 0) {\n  388: \t\tif (_wm->_desiredRotationalVelocity <= _wm->_maxRotationalDeltaValue)\n  389: \t\t\t_wm->_actualRotationalVelocity = _wm->_desiredRotationalVelocity;\n  391: \t\t\t_wm->_actualRotationalVelocity = _wm->_maxRotationalDeltaValue;\n  393: \t\tif (_wm->_desiredRotationalVelocity < 0) {\n  394: \t\t\tif (_wm->_desiredRotationalVelocity >= -_wm->_maxRotationalDeltaValue)\n  395: \t\t\t\t_wm->_actualRotationalVelocity = _wm->_desiredRotationalVelocity;\n  397: \t\t\t\t_wm->_actualRotationalVelocity = -_wm->_maxRotationalDeltaValue;\n  403: \t// after this call, wm->_agentAbsoluteLinearSpeed AND _wm->_agentAbsoluteOrientation are updated (internal data)\n  404: \tgConfigurationLoader->make_RobotAgentWorldInterface()->applyInternalDynamics(_wm);\n  415: \tthis->xReal_old = _wm->_xReal;\n  416: \tthis->yReal_old = _wm->_yReal;\n  419: \tdouble headingAngle = _wm->_agentAbsoluteOrientation * M_PI / 180;\n  422: \t_xDeltaReal = _wm->_agentAbsoluteLinearSpeed * cosHeading;\n  423: \t_yDeltaReal = _wm->_agentAbsoluteLinearSpeed * sinHeading;\n  425: \t_wm->_xReal += _xDeltaReal;\n  426: \t_wm->_yReal += _yDeltaReal;\n  427: \tsetCoord((int) _wm->_xReal + 0.5, (int) _wm->_yReal + 0.5);\n  431: \t\tif (_wm->_agentAbsoluteLinearSpeed >= 1.0) {\n  432: \t\t\t_wm->_agentAbsoluteLinearSpeed--;\n  433: \t\t} else if (_wm->_agentAbsoluteLinearSpeed <= -1.0) {\n  434: \t\t\t_wm->_agentAbsoluteLinearSpeed++;\n  436: \t\tif ((_wm->_agentAbsoluteLinearSpeed > -1.0) && (_wm->_agentAbsoluteLinearSpeed < 1.0)) {\n  437: \t\t\t_wm->_agentAbsoluteLinearSpeed = 0;\n  440: \t\t_wm->_xReal = xReal_old;\n  441: \t\t_wm->_yReal = yReal_old;\n  444: \t\tif (!std::isnan(_wm->_agentAbsoluteLinearSpeed) && _wm->_agentAbsoluteLinearSpeed != 0)\n  450: \t\t\t_wm->_xReal = xReal_old;\n  451: \t\t\t_wm->_yReal = yReal_old;\n  452: \t\t\tsetCoord((int) _wm->_xReal + 0.5, (int) _wm->_yReal + 0.5);\n  457: \t\t_wm->_agentAbsoluteLinearSpeed = 0;\n  461: \t\t\t_wm->_agentAbsoluteOrientation = _lastAgentAbsoluteOrientation;\n  462: \t\t\t_wm->_actualRotationalVelocity = 0;\n  464: \t\t\t_wm->_actualRotationalVelocity = _wm->_desiredRotationalVelocity;\n  466: \t\t//_wm->_desiredTranslationalValue = _wm->_desiredRotationalVelocity = 0;\n  467: \t\t_wm->_actualTranslationalValue = 0;\n  471: \t\t_wm->_actualRotationalVelocity = _wm->_desiredRotationalVelocity;\n  472: \t\t_wm->_actualTranslationalValue = _wm->_agentAbsoluteLinearSpeed; // (!) _wm->_desiredTranslationalValue is different as the \"desired\" translation speed may not be reached due to physical actuator limitations\n  491: \tdouble orientationAngle = _wm->_agentAbsoluteOrientation * M_PI / 180;\n  494: \tfor (int i = 0; i < _wm->_sensorCount; i++) {\n  497: \t\t_wm->_rangeSensors[i]->update(_wm->_xReal, _wm->_yReal, orientationAngle);\n  498: \t\t_wm->_rangeSensors[i]->cast(gEnvironmentImage);\n  500: \t\t_wm->_sensors[i][5] = _wm->_rangeSensors[i]->_obstacleRange;\n  501: \t\t_wm->_sensors[i][6] = _wm->_rangeSensors[i]->_obstacleId;\n  505: \t\t\t_wm->_rangeSensors[i]->cast(gZoneImage);\n  506: \t\t\t_wm->_ditchSensor[i] = _wm->_rangeSensors[i]->_obstacleRange;\n  511:     updateSensorArray(_wm->_rangeSensors, _wm->_sensorCount, _wm->_xReal, _wm->_yReal, orientationAngle);\n  512:     for (int i = 0; i < _wm->_sensorCount; i++) {\n  513:         _wm->_sensors[i][5] = _wm->_rangeSensors[i]->_obstacleRange;\n  514:         _wm->_sensors[i][6] = _wm->_rangeSensors[i]->_obstacleId;\n  520: \tpixel = getPixel32(gZoneImage, _wm->_xReal, _wm->_yReal);\n  522: \t_wm->_floorSensor = r;\n  554: \t\t\t\t\tSimpleShellsAgentWorldModel* wm = static_cast<SimpleShellsAgentWorldModel*>(_wm);\n  575: \tint thisId = this->_wm->_agentId;\n  589: \t\tdouble xo = this->_wm->_xReal - other->_wm->_xReal;\n  590: \t\tdouble yo = this->_wm->_yReal - other->_wm->_yReal;\n  609: \t\tgCollisionLogFile << this->_wm->_world->getIterations() << \" #\" << this->_wm->_agentId << std::endl;\n  661: \t\tstr += boost::lexical_cast<std::string > (this->_wm->_agentId);\n  668: \t\tint xcenter = (int)(_wm->_xReal + 0.5);\n  669: \t\tint ycenter = (int)(_wm->_yReal + 0.5);\n  681: \tif (_wm->_agentId == gAgentIndexFocus && gUserCommandMode) // && _iterations%10 < 5)\n  685: \t\tint xcenter = (int) _wm->_xReal + 0.5;\n  686: \t\tint ycenter = (int) _wm->_yReal + 0.5;\n  701: \t\t//\t\t\tfor ( int xTmp = (int)_wm->_xReal - dx ; xTmp != (int)_wm->_xReal + dx + 1 ; xTmp++ )\n  702: \t\t//\t\t\t\tfor ( int yTmp = (int)_wm->_yReal - dy ; yTmp != (int)_wm->_yReal + dy + 1 ; yTmp++ )\n  710: \t\tint xOrientationMarker = (int) (_wm->_xReal + 0.5) + gAgentWidth / 2 * cos(_wm->_agentAbsoluteOrientation * M_PI / 180);\n  711: \t\tint yOrientationMarker = (int) (_wm->_yReal + 0.5) + gAgentWidth / 2 * sin(_wm->_agentAbsoluteOrientation * M_PI / 180);\n  713: \t\tif (_wm->_agentId == gAgentIndexFocus && gUserCommandMode) {\n  727: \t\tfor (int i = 0; i < _wm->_sensorCount; i++) {\n  729: \t\t\tdouble x1 = (_wm->_xReal + _wm->_sensors[i][1] * cos(_wm->_sensors[i][2] + _wm->_agentAbsoluteOrientation * M_PI / 180));\n  730: \t\t\tdouble y1 = (_wm->_yReal + _wm->_sensors[i][1] * sin(_wm->_sensors[i][2] + _wm->_agentAbsoluteOrientation * M_PI / 180));\n  731: \t\t\tdouble x2 = (_wm->_xReal + _wm->_sensors[i][3] * cos(_wm->_sensors[i][4] + _wm->_agentAbsoluteOrientation * M_PI / 180));\n  732: \t\t\tdouble y2 = (_wm->_yReal + _wm->_sensors[i][3] * sin(_wm->_sensors[i][4] + _wm->_agentAbsoluteOrientation * M_PI / 180));\n  735: \t\t\t/*_sensors[i][5] = */castSensorRay(gEnvironmentImage, x1, y1, &x2, &y2, _wm->getSensorMaximumDistanceValue(i)); // x2 and y2 are overriden with collision coordinate if ray hits object.\n  738: \t\t\tif (_wm->_sensors[i][5] < _wm->getSensorMaximumDistanceValue(i) - 1) //gSensorRange-1 )\n  793: \t\t\tregister_surface(_x, _y, gAgentPositiveMaskImage, gEnvironmentImage, _wm->_agentId + 1000); // [!n] CONVENTION: _agentId+100 to avoid confusion with empty space (0: empty ; 1: static object; 2-99: reserved for other static objects)\n  795: \t\t\tregister_surface(_x, _y, gAgentNegativeMaskImage, gEnvironmentImage, _wm->_agentId + 1000); // [!n] CONVENTION: _agentId+100 to avoid confusion with empty space (0: empty ; 1: static object; 2-99: reserved for other static objects)\n  797: \t\t\tregister_surface(_x, _y, gAgentMaskImage, gEnvironmentImage, _wm->_agentId + 1000); // [!n] CONVENTION: _agentId+100 to avoid confusion with empty space (0: empty ; 1: static object; 2-99: reserved for other static objects)\n  824: \t_wm->_xReal = __x;\n  825: \t_wm->_yReal = __y;\n  837: \treturn _wm;\n  844: \t\tint id = _wm->_agentId;\n  862: \tfor(int i=0;i<_wm->_sensorCount;i++){\n  863: \t\tif(_wm->_sensors[i][6] >= 1000 && _wm->_sensors[i][6] <= 2000){\n  864: \t\t\tRobotAgentPtr other = gWorld->getAgent(_wm->_sensors[i][6]-1000);\n  866: \t\t\t\tagents.push_back(gWorld->getAgent(_wm->_sensors[i][6]-1000));\n  883: \tint nAgents = _wm->_world->getNbOfAgent();\n  884: \tint id = _wm->_agentId;\n  895: \t\t\t\t\tother->removeNeighbour(gWorld->getAgent(this->_wm->_agentId));\n  905: \t\tRobotAgentPtr other = _wm->_world->getAgent(i);\n  918: \t\t\tx1 = this->_wm->_xReal;\n  919: \t\t\ty1 = this->_wm->_yReal;\n  920: \t\t\tx2 = other->_wm->_xReal;\n  921: \t\t\ty2 = other->_wm->_yReal;\n  954: \t\tother->addNeighbour(gWorld->getAgent(this->_wm->_agentId));\n  979: \t\torganism->addRobot(gWorld->getAgent(this->_wm->_agentId));\n  983: \t\tother->addNeighbour(gWorld->getAgent(this->_wm->_agentId));\n  986: \t\tgLogFile << \"Adding agent \" << this->_wm->_agentId << \" to organism: \" << organism->getId() << std::endl;\n  993: \t\tother->addNeighbour(gWorld->getAgent(this->_wm->_agentId));\n  996: \t\tgLogFile << \"Adding agent \" << other->_wm->_agentId << \" to organism: \" << organism->getId() << std::endl;\n  999: \t\tgLogFile << \"Creating new organism: \" << organism->getId() << \" robots: \" << this->_wm->_agentId << \", \" << other->_wm->_agentId << std::endl;\n 1000: \t\torganism->addRobot(gWorld->getAgent(this->_wm->_agentId));\n 1007: \t\tother->addNeighbour(gWorld->getAgent(this->_wm->_agentId));\n 1022: \t\tif ((*it)->_wm->_agentId == neighbour->_wm->_agentId) {\n 1049: \t\tgLogFile << \"Agent: \" << this->_wm->_agentId << \" letting go of organism: \" << this->getOrganism()->getId() << std::endl;\n 1050: \t\tthis->getOrganism()->removeRobot(gWorld->getAgent(this->_wm->_agentId));\n 1054: \t\t\t(*it)->removeNeighbour(gWorld->getAgent(this->_wm->_agentId));\n 1083: \t\t\tif ((*it)->_wm->_agentId == other->_wm->_agentId) {\n\n/Users/manu/git/monee-novelty/src/core/RobotAgentWorldInterface.cpp:\n   33: void RobotAgentWorldInterface::applyInternalDynamics( RobotAgentWorldModel *__wm )\n   37: \t__wm->_agentAbsoluteLinearSpeed = __wm->_actualTranslationalValue;\n   38: \t__wm->_agentAbsoluteOrientation += __wm->_actualRotationalVelocity;\n   43: \t//if ( __wm->_agentAbsoluteOrientation < 0 )\n   44: \t//\t__wm->_agentAbsoluteOrientation += 360; // assume cannot go below -360deg in one step only (TODO: explicit check)\n   46: \tif ( __wm->_agentAbsoluteOrientation <= -180.0 )\n   48: \t\t__wm->_agentAbsoluteOrientation = __wm->_agentAbsoluteOrientation + 360.0;\n   52: \t\tif ( __wm->_agentAbsoluteOrientation > 180.0 )\n   54: \t\t\t__wm->_agentAbsoluteOrientation = __wm->_agentAbsoluteOrientation - 360.0;\n   59: \t\tapplyStream(__wm);\n   63: void RobotAgentWorldInterface::applyStream(RobotAgentWorldModel *__wm){\n   64: \tRobotAgentPtr agent = gWorld->getAgent(__wm->_agentId);\n   68: \t} else if (isInRiverzone(__wm)){\n   82: \t\tagent->xReal_old = __wm->_xReal; // backup old position in case of collision\n   83: \t\tagent->yReal_old = __wm->_yReal;\n   84: \t\t__wm->_xReal += _xDeltaReal;\n   85: \t\t__wm->_yReal += _yDeltaReal;\n   87: \t\tagent->setCoord((int) __wm->_xReal + 0.5, (int) __wm->_yReal + 0.5);\n   90: \t\t\t__wm->_xReal = agent->xReal_old;\n   91: \t\t\t__wm->_yReal = agent->yReal_old;\n   93: \t\t\tagent->xReal_old = __wm->_xReal;\n   94: \t\t\tagent->yReal_old = __wm->_yReal;\n   95: \t\t\tagent->setCoord((int) __wm->_xReal + 0.5, (int) __wm->_yReal + 0.5);\n\n/Users/manu/git/monee-novelty/src/core/SDL_gfxRoborobo.cpp:\n   56:     SDL_WM_SetCaption( \"roborobo!\", NULL );\n  169: \t//if (SDL_WM_ToggleFullScreen(gScreen) == 0)\n\n/Users/manu/git/monee-novelty/src/ext/PerceptronBehaviorControlArchitecture.cpp:\n   14: PerceptronBehaviorControlArchitecture::PerceptronBehaviorControlArchitecture( RobotAgentWorldModel *__wm )\n   16: \t_wm = (EvolvingRobotAgentWorldModel*)__wm;\n   17: \t//_wm->_genome.resize(18); \n   28: \t_parameters = _wm->_genome;\n   37: \tif ( _wm->getNewGenomeStatus() ) // check for new NN parameters\n   40: \t\t_wm->setNewGenomeStatus(false);\n   43: \tif ( _wm->_age < 0 ) // then move randomly\n   46: \t\t_wm->_desiredTranslationalValue = ( ranf()*2.-1. ) * gMaxTranslationalSpeed ;\n   47: \t\t_wm->_desiredRotationalVelocity =( ranf()*2.-1. ) * gMaxRotationalSpeed ;\n   51: \t_wm->_desiredTranslationalValue = 0;\n   52: \t_wm->_desiredRotationalVelocity = 0;\n   55: \tfor ( int i = 0 ; i != _wm->_sensorCount ; i++ )\n   57: \t\t_wm->_desiredTranslationalValue += _parameters[i] * _wm->getSensorDistanceValue(i);\n   58: \t\t_wm->_desiredRotationalVelocity += _parameters[i+8+1] * _wm->getSensorDistanceValue(i);\n   62: \t_wm->_desiredTranslationalValue += _parameters[8] * 1.;\n   63: \t_wm->_desiredRotationalVelocity +=  _parameters[17] * 1.;\n   65: \t_wm->_desiredTranslationalValue = tanh(_wm->_desiredTranslationalValue);\n   66: \t_wm->_desiredRotationalVelocity = tanh(_wm->_desiredRotationalVelocity);\n   69: \t_wm->_desiredTranslationalValue = _wm->_desiredTranslationalValue * gMaxTranslationalSpeed;\n   70: \t_wm->_desiredRotationalVelocity = _wm->_desiredRotationalVelocity * gMaxRotationalSpeed;\n\n/Users/manu/git/monee-novelty/src/ext/RobotAgentWorldInterfaceDangerWorld.cpp:\n   33: void RobotAgentWorldInterfaceDangerWorld::applyInternalDynamics( RobotAgentWorldModel *__wm )\n   46: \tif ( __wm->_agentId == 0 )\n   49: \t\t__wm->setRobotNeighborhoodCounter(0);\n   71: \tif ( __wm->_floorSensor == 100 ) // robot is in danger zone.\n   74: \t\t\t(double)std::min( __wm->getRobotNeighborhoodCounter(), EvolvingRobotAgentWorldModelDangerWorld::_gRobotDensityThreshold) / (double)EvolvingRobotAgentWorldModelDangerWorld::_gRobotDensityThreshold ;\n   77: \t\t__wm->_actualTranslationalValue *= penalizationFactor;\n   78: \t\t__wm->_actualRotationalVelocity *= penalizationFactor;\n   81: \t__wm->_agentAbsoluteLinearSpeed = __wm->_actualTranslationalValue;\n   82: \t__wm->_agentAbsoluteOrientation += __wm->_actualRotationalVelocity;\n   83: \tstd::cout << \"Interface(\" << __wm->_agentId << \") : \" << __wm->_agentAbsoluteOrientation << std::endl ;\n   88: \t//if ( __wm->_agentAbsoluteOrientation < 0 )\n   89: \t//\t__wm->_agentAbsoluteOrientation += 360; // assume cannot go below -360deg in one step only (TODO: explicit check)\n   91: \tif ( __wm->_agentAbsoluteOrientation <= -180.0 )\n   93: \t\t__wm->_agentAbsoluteOrientation = __wm->_agentAbsoluteOrientation + 360.0;\n   97: \t\tif ( __wm->_agentAbsoluteOrientation > 180.0 )\n   99: \t\t\t__wm->_agentAbsoluteOrientation = __wm->_agentAbsoluteOrientation-360.0;\n\n/Users/manu/git/monee-novelty/src/ext/rjh/DifferentialControlArchitecture.cpp:\n   14: DifferentialControlArchitecture::DifferentialControlArchitecture( RobotAgentWorldModel *__wm ) : BehaviorControlArchitecture ( __wm )\n   79: \t\t_wm->_desiredRotationalVelocity = -newturnrate; // *180 because newTurnRate is in radials\n   81: \t\t_wm->_desiredRotationalVelocity = 0;\n   83: \t_wm->_desiredTranslationalValue = newspeed;\n   84: \t//cout << \"Set speed (\" << left << \", \" << right << \"): \" << newspeed << \", rotation: \" << _wm->_desiredRotationalVelocity << endl;\n   89: \tvector<double>* sensors = new vector<double>(_wm->_sensorCount);\n   90: \tfor (int i = 0; i < _wm->_sensorCount; i++) {\n   91: \t\tsensors->push_back(_wm->getSensorDistanceValue(i) / _wm->getSensorMaximumDistanceValue(i));\n\n/Users/manu/git/monee-novelty/src/ext/rjh/EvolutionaryControlArchitecture.cpp:\n   15: EvolutionaryControlArchitecture::EvolutionaryControlArchitecture( RobotAgentWorldModel *__wm ) : DifferentialControlArchitecture ( __wm )\n   73: \t\t\tcandidate->setWorldModel(_wm);\n  133: \t\t\t_wm->_desiredTranslationalValue =  + 1 - ( (double)gSensorRange - ((_wm->_sensors[2][5]+_wm->_sensors[3][5])/2) )  / (double)gSensorRange; \n  134: \t\t\tif ( _wm->_sensors[0][5] + _wm->_sensors[1][5] + _wm->_sensors[2][5] < _wm->_sensors[3][5] + _wm->_sensors[4][5] + _wm->_sensors[5][5] ) \n  135: \t\t\t\t_wm->_desiredRotationalVelocity = +5;\n  137: \t\t\t\tif ( _wm->_sensors[3][5] + _wm->_sensors[4][5] + _wm->_sensors[5][5] < 3*gSensorRange ) \n  138: \t\t\t\t\t_wm->_desiredRotationalVelocity = -5;\n  140: \t\t\t\t\tif ( _wm->_desiredRotationalVelocity > 0 ) \n  141: \t\t\t\t\t\t_wm->_desiredRotationalVelocity--;\n  143: \t\t\t\t\t\tif ( _wm->_desiredRotationalVelocity < 0) \n  144: \t\t\t\t\t\t\t_wm->_desiredRotationalVelocity++;\n  146: \t\t\t\t\t\t\t_wm->_desiredRotationalVelocity = 0.01 - (double)(rand()%10)/10.*0.02;\n  160: \tdouble travelDistance = abs(_wm->_actualTranslationalValue) / abs(_wm->_maxTranslationalDeltaValue);\n  163: \tdouble bearingDiff = abs(_wm->_actualRotationalVelocity / 360.0);\n\n/Users/manu/git/monee-novelty/src/ext/Utils/Controller.cpp:\n   84: void Controller::setWorldModel(RobotAgentWorldModel* __wm){\n   85: \tthis->_wm = __wm;\n\n/Users/manu/git/monee-novelty/src/ext/Utils/NeuralController.cpp:\n  101: \tfor (i = 0; i < _wm->_sensorCount; i++) {\n  102: \t\tsensors->push_back(_wm->getSensorDistanceValue(i) / _wm->getSensorMaximumDistanceValue(i));\n\n/Users/manu/git/monee-novelty/src/ext/Utils/Util.cpp:\n   20: NeuralControllerPtr Util::createRandomGenome(RobotAgentWorldModel *__wm) {\n\n497 matches across 28 files\n\n\nSearching 711 files for \"stdlib\"\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/PointMutator.h:\n   39: #include <stdlib.h>\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/TournamentSelection.h:\n   37: #include <stdlib.h>\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/src/StateVector.cpp:\n    6: #include \"stdlib.h\"\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/lioutilities/lioutils/lio_global.h:\n   52: #include <cstdlib>\n\n/Users/manu/git/monee-novelty/include/core/Utilities/Misc.h:\n   22: #include <cstdlib> // rand and RAND_MAX\n\n/Users/manu/git/monee-novelty/include/ext/Utils/Rand.h:\n   13: #include <stdlib.h>\n\n/Users/manu/git/monee-novelty/src/contrib/Organism.cpp:\n   15: #include <cstdlib> \n\n/Users/manu/git/monee-novelty/src/contrib/Properties.cpp:\n   34: #include <cstdlib>\n\n/Users/manu/git/monee-novelty/src/core/ExtendedProperties.cpp:\n    4: #include <cstdlib> // new C++ way to include the exit instruction\n\n/Users/manu/git/monee-novelty/src/core/SDL_gfxPrimitives.c:\n   10: #include <stdlib.h>\n\n10 matches across 10 files\n\n\nSearching 711 files for \"assignFitness\"\n\n/Users/manu/git/monee-novelty/roborobo:\n    <binary>\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsControlArchitecture.h:\n   40:         void assignFitness(std::vector<Genome> & genomes);\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  239: void SimpleShellsControlArchitecture::assignFitness(std::vector<Genome> & genomes) {\n  582: \tassignFitness(_wm->_genePool);\n\n4 matches across 3 files\n\n\nSearching 711 files for \"_genePool\"\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentWorldModel.h:\n   17:         std::vector<Genome> _genePool;\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentWorldModel.cpp:\n   41: \tfor (itGenome = _genePool.rbegin(); itGenome < _genePool.rend(); itGenome++) {\n   42: \t\tif (itGenome != _genePool.rbegin()) {\n  100: \t_genePool.clear();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  144: \t_wm->_genePool.reserve(gMaxGenePool);\n  346: \t\tfor (itGatheredGenomes = _wm->_genePool.begin(); itGatheredGenomes < _wm->_genePool.end(); itGatheredGenomes++) {\n  354: \t\t\t_wm->_genePool.push_back(**itNewGenomes);\n  355: \t\t\tGenome & genome = _wm->_genePool.back();\n  359: \t\t\tif (_wm->_genePool.size() == gMaxGenePool) {\n  360: \t\t\t\t// stop gathering genomes once all individuals are in _genePool.\n  587: \tassignFitness(_wm->_genePool);\n  589: \tstd::sort(_wm->_genePool.begin(), _wm->_genePool.end(), genomeSortPredicate);\n  590: \tstd::vector<Genome>::const_iterator winner = selectWeighted(_wm->_genePool);\n\n16 matches across 3 files\n\n\nSearching 773 files for \"simGenomeBehaviour\"\n\n/Users/manu/git/monee-novelty/roborobo:\n    <binary>\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsControlArchitecture.h:\n   69:                 void simGenomeBehaviour();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  159:     simGenomeBehaviour();\n  480: void SimpleShellsControlArchitecture::simGenomeBehaviour() {\n  603: \t//simGenomeBehaviour();\n\n5 matches across 3 files\n\n\nSearching 813 files for \"enum\"\n\n/Users/manu/git/monee-novelty/SDLMain.m:\n  106:     NSEnumerator *enumerator;\n  113:     enumerator = [[aMenu itemArray] objectEnumerator];\n  114:     while ((menuItem = [enumerator nextObject]))\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/AveragingCrossover.h:\n   61: \tenum AveragingType {\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/EMeans.h:\n   68: \tenum FitnessType { SIMP, DYN, DYN_SIMP };\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/Evolver.h:\n  556:     enum  {\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/GeneticConfig.h:\n   18:  * Put all states and genes you need in these enumerations.\n   19:  * Do not use specific constant values, rather use the enumerated names\n   27: typedef enum StateID\n   35: typedef enum GeneID\n\n/Users/manu/git/monee-novelty/include/ext/rjh/EvolutionaryControlArchitecture.h:\n   43: \tenum CalculationMethod {\n   68: \tenum Phase {\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentWorldModel.h:\n   11: enum {PHASE_GATHERING, PHASE_MATING};\n   12: enum {ACTION_ACTIVATE, ACTION_GATHER, ACTION_BRAKE, ACTION_MATE, ACTION_SELECT, ACTION_SIZE};\n\n16 matches across 7 files\n\n\nSearching 813 files for \"advance\"\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/EMeans.h:\n   62:  * Does this help ? Please ask if this is not clear - and thanks in advance for your feedback.\n\n/Users/manu/git/monee-novelty/include/contrib/zsu/StringUtils.h:\n  154:     matches, it is read so that the current position of the stream advances\n  168:     stream advances to the first character after #{#.\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentWorldModel.h:\n   44:         inline int advance() {\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  643: \t\t\t_wm->advance();\n  649: \t\t\t_wm->advance();\n  654: \t\t\t_wm->advance();\n  663: \t\t\t_wm->advance();\n  668: \t\t\tif (_wm->advance() > 0) done = true;\n\n/Users/manu/git/monee-novelty/src/core/SDL_gfxPrimitives.c:\n 1872: \t * X advances every time Y advances 1 pixel, truncating the result so that\n 1889: \t\t * rollover in error accumulator, x coord advances \n 1894: \t    yy0++;\t\t/* y-major so always advance Y */\n 1910: \t * that Y advances each time X advances 1 pixel, truncating the result so\n 1928: \t\t * Accumulator turned over, advance y \n 1933: \t    xx0 += xdir;\t/* x-major so always advance X */\n\n17 matches across 5 files\n\n\nSearching 815 files for \"simGenomeBehaviour\"\n\n/Users/manu/git/monee-novelty/roborobo:\n    <binary>\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsControlArchitecture.h:\n   69:                 void simGenomeBehaviour();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  159:     simGenomeBehaviour();\n  480: void SimpleShellsControlArchitecture::simGenomeBehaviour() {\n  611: \t//simGenomeBehaviour();\n\n5 matches across 3 files\n\n\nSearching 815 files for \"SimpleShellsControlArchitecture\"\n\n/Users/manu/git/monee-novelty/roborobo:\n    <binary>\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsControlArchitecture.h:\n    1: #ifndef SIMPLESHELLSCONTROLARCHITECTURE_H\n    2: #define SIMPLESHELLSCONTROLARCHITECTURE_H\n   21: class SimpleShellsControlArchitecture : public BehaviorControlArchitecture {\n   52: \t\tSimpleShellsControlArchitecture(RobotAgentWorldModel *__wm);\n   53: \t\t~SimpleShellsControlArchitecture();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n    1: #include \"SimpleShells/include/SimpleShellsControlArchitecture.h\"\n   20: std::vector<Genome>::const_iterator SimpleShellsControlArchitecture::selectWeighted(std::vector<Genome> & genomes) {\n  107: SimpleShellsControlArchitecture::SimpleShellsControlArchitecture( RobotAgentWorldModel *__wm ) : BehaviorControlArchitecture ( __wm ) {\n  163: SimpleShellsControlArchitecture::~SimpleShellsControlArchitecture() {\n  168: void SimpleShellsControlArchitecture::reset() {\n  188: void SimpleShellsControlArchitecture::logStats()\n  207: void SimpleShellsControlArchitecture::prepareShutdown() {\n  239: void SimpleShellsControlArchitecture::assignFitness(std::vector<Genome> & genomes) {\n  312: void SimpleShellsControlArchitecture::gatherGenomes(std::vector<Genome*> & genePool, int commDistSquared) {\n  319: \t\t\tSimpleShellsControlArchitecture* controller = static_cast<SimpleShellsControlArchitecture*>(agent->getBehavior());\n  327: \t\t\t\tSimpleShellsControlArchitecture* controller = static_cast<SimpleShellsControlArchitecture*>(agent->getBehavior());\n  336: void SimpleShellsControlArchitecture::updateGenomes() {\n  370: void SimpleShellsControlArchitecture::updateActuators() {\n  480: void SimpleShellsControlArchitecture::simGenomeBehaviour() {\n  544: int SimpleShellsControlArchitecture::binarize(double d) {\n  552: double SimpleShellsControlArchitecture::calcBehaviorDistance(Genome &g1, Genome &g2) {\n  564: double SimpleShellsControlArchitecture::euclidDistance(std::vector<int> &v1, std::vector<int> &v2) {\n  579: void SimpleShellsControlArchitecture::select() {\n  618: void SimpleShellsControlArchitecture::step() {\n\n/Users/manu/git/monee-novelty/src/ext/SimpleShellsConfigurationLoader.cpp:\n    6: #include \"SimpleShells/include/SimpleShellsControlArchitecture.h\"\n   40: \treturn new SimpleShellsControlArchitecture(wm);\n\n54 matches across 4 files\n\n\nSearching 815 files for \"simSensorResults\"\n\n/Users/manu/git/monee-novelty/include/core/RoboroboMain/roborobo.h:\n  133:     std::vector< std::vector<int> > simSensorResults;\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  182: \t_activeGenome.simSensorResults.clear(); \n  377: \t\tfor(auto x : _activeGenome.simSensorResults[0]) {\n  490: \t_activeGenome.simSensorResults.clear();\n  533: \t\t_activeGenome.simSensorResults.push_back(result);\t\n  537: \t// \tfor(auto x : _activeGenome.simSensorResults[1]) {\n  557: \tfor(int i = 0; i < g1.simSensorResults.size(); i++) {\n  559: \t\tdiff += euclidDistance(g1.simSensorResults[i], g2.simSensorResults[i]);\n  587: \t\t// std::cout << _activeGenome.simSensorResults[3][1] << std::endl;\n  588: \t\t// std::cout << gen.simSensorResults[3][1] << std::endl;\n\n11 matches across 2 files\n\n\nSearching 839 files for \"convertFromString\"\n\n/Users/manu/git/monee-novelty/roborobo:\n    <binary>\n\n/Users/manu/git/monee-novelty/include/core/Utilities/Misc.h:\n   68: //  convertFromString<int>(i, std::string(\"ff\"), std::hex))\n   69: //  convertFromString<float>(f, std::string(\"123.456\"), std::dec))\n   73: bool convertFromString(T& t, \n\n/Users/manu/git/monee-novelty/src/core/ExtendedProperties.cpp:\n   16: \t\tconvertFromString<int>(*__propertyValue, getProperty(__propertyName), std::dec);\n   31: \t\tconvertFromString<double>(*__propertyValue, getProperty(__propertyName), std::dec);\n\n/Users/manu/git/monee-novelty/src/core/roborobo.cpp:\n   52: #include \"Utilities/Misc.h\"  // contains convertFromString(...)\n  835: \t\tconvertFromString<int>(gFitnessMode, gProperties.getProperty(\"gDisplayMode\"), std::dec);\n  857: \t\tconvertFromString<int>(gAgentIndexFocus, gProperties.getProperty(\"gAgentIndexFocus\"), std::dec);\n  864: \t\tconvertFromString<int>(gInspectorAgentXStart, gProperties.getProperty(\"gInspectorAgentXStart\"), std::dec);\n  871: \t\tconvertFromString<int>(gInspectorAgentYStart, gProperties.getProperty(\"gInspectorAgentYStart\"), std::dec);\n  878: \t\tconvertFromString<int>(gDisplayMode, gProperties.getProperty(\"gDisplayMode\"), std::dec);\n  885: \t\tconvertFromString<int>(gFastDisplayModeSpeed, gProperties.getProperty(\"gFastDisplayModeSpeed\"), std::dec);\n  892: \t\tconvertFromString<int>(gFramesPerSecond, gProperties.getProperty(\"gFramesPerSecond\"), std::dec);\n  899: \t\tconvertFromString<int>(gLocomotionMode, gProperties.getProperty(\"gLocomotionMode\"), std::dec);\n  906: \t\tconvertFromString<int>(gMaxSpeedOnXaxis, gProperties.getProperty(\"gMaxSpeedOnXaxis\"), std::dec);\n  913: \t\tconvertFromString<int>(gMaxSpeedOnYaxis, gProperties.getProperty(\"gMaxSpeedOnYaxis\"), std::dec);\n  920: \t\tconvertFromString<float>(gMaxTranslationalSpeed, gProperties.getProperty(\"gMaxTranslationalSpeed\"), std::dec);\n  927: \t\tconvertFromString<float>(gMaxTranslationalDeltaValue, gProperties.getProperty(\"gMaxTranslationalDeltaValue\"), std::dec);\n  934: \t\tconvertFromString<float>(gMaxRotationalSpeed, gProperties.getProperty(\"gMaxRotationalSpeed\"), std::dec);\n  941: \t\tconvertFromString<int>(gMoveStepHeight, gProperties.getProperty(\"gMoveStepHeight\"), std::dec);\n  948: \t\tconvertFromString<int>(gMoveStepWidth, gProperties.getProperty(\"gMoveStepWidth\"), std::dec);\n  955: \t\tconvertFromString<int>(gMaxIt, gProperties.getProperty(\"gMaxIt\"), std::dec);\n  963: \t\tconvertFromString<int>(gNbOfAgents, gProperties.getProperty(\"gNbOfAgents\"), std::dec);\n  970: \t\tconvertFromString<int>(gParallaxFactor, gProperties.getProperty(\"gParallaxFactor\"), std::dec);\n  977: \t\tconvertFromString<int>(gRandomSeed, gProperties.getProperty(\"gRandomSeed\"), std::dec);\n  994: \t\tconvertFromString<int>(gScreenHeight, gProperties.getProperty(\"gScreenHeight\"), std::dec);\n 1001: \t\tconvertFromString<int>(gScreenWidth, gProperties.getProperty(\"gScreenWidth\"), std::dec);\n 1008: \t\tconvertFromString<int>(gScreenWidth, gProperties.getProperty(\"gScreenWidth\"), std::dec);\n 1015: \t\tconvertFromString<int>(gSensorRange, gProperties.getProperty(\"gSensorRange\"), std::dec);\n 1022: \t\tconvertFromString<int>(gMaxRadioDistanceToSquare, gProperties.getProperty(\"gMaxRadioDistance\"), std::dec);\n 1268: \t\t\tconvertFromString<int>(gMaxEnergyPoints, gProperties.getProperty(\"gMaxEnergyPoints\"), std::dec);\n 1275: \t\t\tconvertFromString<float>(gEnergyPointRadius, gProperties.getProperty(\"gEnergyPointRadius\"), std::dec);\n 1282: \t\t\tconvertFromString<float>(gEnergyPointValue, gProperties.getProperty(\"gEnergyPointValue\"), std::dec);\n 1289: \t\t\tconvertFromString<int>(gEnergyPointRespawnLagMaxValue, gProperties.getProperty(\"gEnergyPointRespawnLagMaxValue\"), std::dec);\n 1340: \t\t\tconvertFromString<int>(gConnectionGap, gProperties.getProperty(\"gConnectionGap\"), std::dec);\n 1368: \t\t\tconvertFromString<int>(gOrganismSampleFrequency, gProperties.getProperty(\"gOrganismSampleFrequency\"), std::dec);\n 1392: \t\t\tconvertFromString<int>(gStreamDirection, gProperties.getProperty(\"gStreamDirection\"), std::dec);\n 1400: \t\t\tconvertFromString<double>(gStreamStrength, gProperties.getProperty(\"gStreamStrength\"), std::dec);\n 1407: \t\t\tconvertFromString<int>(gRiverbedZone, gProperties.getProperty(\"gRiverbedZone\"), std::dec);\n 1416: \t\tconvertFromString<int>(gSpawnWidth, gProperties.getProperty(\"gSpawnWidth\"), std::dec);\n 1422: \t\tconvertFromString<int>(gSpawnHeight, gProperties.getProperty(\"gSpawnHeight\"), std::dec);\n\n/Users/manu/git/monee-novelty/src/core/RobotAgent.cpp:\n  164: \t\tconvertFromString<int>(x, gProperties.getProperty(s), std::dec);\n  177: \t\tconvertFromString<int>(y, gProperties.getProperty(s), std::dec);\n  219: \t\tconvertFromString<double>(_wm->_agentAbsoluteOrientation, gProperties.getProperty(s), std::dec);\n\n47 matches across 5 files\n\n\nSearching 848 files for \"Genome\" (case sensitive)\n\n/Users/manu/git/monee-novelty/roborobo:\n    <binary>\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/definitions.h:\n   11: #include <genetics/NeuralNetGenome.h>\n   48: \ttypedef Genetics::ESGenome task_genome;\n   76: \ttypedef Genetics::ESGenome task_genome;\n  116: \ttypedef Genetics::ESGenome task_genome;\n  154: \ttypedef Genetics::ESGenome task_genome;\n  181: \ttypedef Genetics::ESGenome task_genome;\n  189: \ttypedef VU::MuPlusOne<Genetics::ESGenome, MU, Genetics::EMeans, std::greater<LIOReal> > MuPlusOne;\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/Evolver.h:\n   80:  *  @tparam Genome The type of genome stored\n   90: template <typename __Genome, size_t reservoirSize, typename Fitness, typename Compare = std::greater<LIOReal> >\n   94: \ttypedef __Genome Genome;\n  135: \tconst Genome& getGenome(void) const { return _genome; }\n  138: \t * Submit a \\c Genome to be included in the _genomeReservoir. Looks for the first\n  143: \t * @param candidate The \\c Genome to add\n  154: \tbool consider(Genome& candidate, bool force = false)\n  165: \t\tGenome* entry = std::find_if(_genomeReservoir, _genomeReservoir + reservoirSize, HasNoFitness());\n  275: \t\t\t\t\t\t\tGenome* original = findInReservoir(_genome);\n  309: \t\t\t\t\t\t\t\tGenome* parent = findInReservoir(_parent);\n  351: \t *  have been able to handle that properly. You must overload parseGenome()\n  354: \t *  @see parseGenome\n  356: \t//template<Genome>\n  363: \t\tListener(Evolver<Genome, reservoirSize, Fitness, Compare>& evolver) :\n  395: \t\tvirtual void parseGenome(const Genome&, unsigned freeSteps )\n  456: \t\t * @return False if x has no fitness set (see Genome::hasFitness()), else\n  459: \t\tbool operator()(const Genome& x, const Genome& y) const\n  472: \t\tbool operator()(const LIOReal& x, const Genome& y) const\n  482: \t\t * @return False if x has no fitness set (see Genome::hasFitness()), else\n  485: \t\tbool operator()(const Genome& x, const LIOReal& y) const\n  494: \t\t * @return False if x has no fitness set (see Genome::hasFitness()), else\n  516: \t\tbool operator()(const Genome& genome) const\n  523: \t * Helper class to compare genetic code in Genomes. Simply calls operator==()\n  530:     \tCompareChromosome(const Genome& genome) :\n  534:     \t\tbool operator()(const Genome& rhs) const\n  540: \t\tconst Genome& _genome;\n  569: \t * \\li Generating mutants (or even completely new Genomes) a-sexually.\n  579: \tGenome _genomeReservoir[reservoirSize];\n  580: \t// should have been: boost::array<Genome, reservoirSize> _genomeReservoir; but Nicolas persuaded me to remove boost dependencies\n  585: \tGenome _genome;\n  590: \tGenome _parent;\n  672: \t\tGenome* parent = selectParent();\n  701: \t\tpostGenome();\n  720: \tvoid postGenome(void)\n  726: \t\t\tlistener->parseGenome(_genome, _freeSteps); //e.g., load NN weights.\n  741: \tGenome* selectParent(void)\n  749: \t\tGenome* retval = std::find_if(_genomeReservoir, _genomeReservoir + reservoirSize, HasNoFitness());\n  766: \tGenome* findInReservoir(const Genome& genome)\n  768: \t\tGenome* end = _genomeReservoir + reservoirSize;\n  769: \t\tGenome* loc = std::find_if(_genomeReservoir, end, CompareChromosome(genome));\n  799: \t\tLOG << \"# Per entry in the reservoir: Fitness Sigma EvaluationCount {Genome}\\n\";\n  831: \t\t\tGenome& genome(_genomeReservoir[i]);\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/Genome.h:\n    2:  *  $Id: Genome.h 2729 2010-09-23 10:16:08Z evert $\n   24:  * Implements genome functionality. A Genome contains a \\c Chromosome (a\n   43: class Genome\n   48: \tGenome(void)\n   53: \tGenome(const Initialiser<Chromosome, Gene>& initialiser) :\n   59:     virtual ~Genome(void)\n  186: \tbool recombine(const Genome & partner)\n  278: \t * @return Reference to this Genome's BaseMutator. Use this to access it and modify any settings\n  283: \t * @return Const reference to this Genome's BaseMutator.\n  288: \t * @return Reference to this Genome's Mutator. Use this to access the Mutator and modify any settings\n  293: \t * @return Const reference to this Genome's Mutator.\n  298:      * @return Reference to this Genome's Recombinator. Use this to access the Recombinator and modify any settings\n  303:      * @return Const reference to this Genome's Recombinator.\n  308:      * @return Reference to this Genome's Initialiser. Use this to access the Initialiser and modify any settings.\n  314:      * @return Const reference to this Genome's Initialiser.\n  363:     /// The Genome's fitness. Must be set from outside.\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/NeuralNetGenome.h:\n    2:  *  $Id: NeuralNetGenome.h 2651 2010-08-20 09:41:23Z evert $\n   42: #include <genetics/Genome.h>\n   56:  * \tLinear Genome for simple neural net control. Enforces minimum and maximum\n   61: class NeuralNetGenome: public Genome< RealMutation, CompleteMutator, AveragingCrossover, RandomInitialiser, FixedLinearChromosome, LIOReal >\n   72: \tNeuralNetGenome(void)\n  146:  * \tLinear Genome for fixed-length real-valued chromosome. Self-updates each individual gene's the mutation sigma (i.e., its\n  149: class ESGenome: public Genome< ESRealMutation, CompleteMutator, AveragingCrossover, RandomInitialiser, FixedLinearChromosome, LIOReal >\n  156: \tESGenome(void)\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/src/Evolver.cpp:\n   21: typedef Genome< RealMutation, PointMutator, OnePointCrossover, RandomInitialiser, FixedLinearChromosome, Fixed32 > SimpleGenome;\n   29: \tSimpleGenome g;\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/src/Genome.cpp:\n    2:  * $Id: Genome.cpp 1338 2009-07-31 14:33:01Z evert $\n    5: #include <genetics/Genome.h>\n   12: #include \"genetics/Genome.h\"\n   23: TEST( Genome, all )\n   25: \ttypedef Genome< RealMutation, PointMutator, UniformCrossover, RandomInitialiser, FixedLinearChromosome, Fixed32 > SimpleGenome;\n   28: \tSimpleGenome g(init);\n   41: \tSimpleGenome h;\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/src/NeuralNetGenome.cpp:\n    2:  *  $Id: NeuralNetGenome.cpp 1524 2009-10-06 12:25:04Z evert $\n   34: #include <genetics/NeuralNetGenome.h>\n   37: const LIOReal Genetics::NeuralNetGenome::_minFitness(0);\n   38: const LIOReal Genetics::NeuralNetGenome::_sigmaMin( 0.01);\n   39: const LIOReal Genetics::NeuralNetGenome::_sigmaMax( 4); // ideal case: 0.1; // 2\n   41: const LIOReal Genetics::ESGenome::_minFitness(0);\n\n/Users/manu/git/monee-novelty/include/contrib/newscast/PopulationControlArchitecture.h:\n   43: \tvirtual ControllerPtr createRandomGenome() = 0;\n\n/Users/manu/git/monee-novelty/include/core/RoboroboMain/roborobo.h:\n  130: struct Genome {\n  140: extern std::vector<Genome> gGenomes;\n  242: extern Uint32 gNextGenomeId;\n\n/Users/manu/git/monee-novelty/include/ext/Utils/Util.h:\n   42: \t\tstatic NeuralControllerPtr createRandomGenome(RobotAgentWorldModel *__wm);\n\n/Users/manu/git/monee-novelty/include/ext/WorldModels/EvolvingRobotAgentWorldModel.h:\n   25: \t\tbool _isNewGenome;\n   34: \t\t//std::vector<double>* getGenome();\n   35: \t\t//void setGenome( std::vector<double> __genome );\n   37: \t\tbool getNewGenomeStatus();\n   38: \t\tvoid setNewGenomeStatus( bool __status );\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentWorldModel.h:\n   17:         std::vector<Genome> _genePool;\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsControlArchitecture.h:\n   40:         void assignFitness(std::vector<Genome> & genomes);\n   41:         void gatherGenomes(std::vector<Genome*> & genePool, int commDistSquared);\n   43:         std::vector<Genome*> _nearbyGenomes;\n   45:         Genome _activeGenome;\n   47:         std::vector<Genome>::const_iterator selectWeighted(std::vector<Genome> & genomes);\n   62: \t\tvoid updateGenomes();\n   68: \t\tGenome* getGenome() {return &_activeGenome;}\n   72:                 void simGenomeBehaviour();\n   74:                 double calcBehaviorDistance(Genome &g1, Genome &g2);\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentWorldModel.cpp:\n   38: \tstd::vector<Genome>::const_reverse_iterator itGenome;\n   41: \tfor (itGenome = _genePool.rbegin(); itGenome < _genePool.rend(); itGenome++) {\n   42: \t\tif (itGenome != _genePool.rbegin()) {\n   47: \t\t\tgLogFile << itGenome->pucks[i] << \", \";\n   49: \t\tgLogFile << itGenome->fitness << \", \" << itGenome->id << \"]\";\n   50: \t\ttotalFitness += itGenome->fitness;\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n   15: bool genomeSortPredicate(const Genome & genomeOne, const Genome & genomeTwo) {\n   20: std::vector<Genome>::const_iterator SimpleShellsControlArchitecture::selectWeighted(std::vector<Genome> & genomes) {\n   21: \tstd::vector<Genome>::const_iterator a, b, c;\n   69: \tfor (std::vector<Genome>::reverse_iterator genome = genomes.rbegin(); genome != genomes.rend(); genome++) {\n   78: \tfor (std::vector<Genome>::const_iterator it = genomes.begin(); it < genomes.end(); it++) {\n  138: \t_nearbyGenomes.reserve(gNbOfAgents); // Agent counter is unpredictable at this time\n  141: \t_activeGenome.parameters.assign(_parameterCount, .0);\n  143: \tmutate(_activeGenome.parameters, 1.0);\n  145: \t_wm->_puckCounters = &(_activeGenome.pucks);\n  149:     simGenomeBehaviour();\n  166: \t_activeGenome.pucks.assign(gPuckColors, 0);\n  167: \t_activeGenome._distance = 0.0;\n  168: \t_activeGenome._lastXPos = _wm->getXReal();\n  169: \t_activeGenome._lastYPos = _wm->getYReal();\n  171: \t_activeGenome.id = gNextGenomeId++;\n  174: \t// std::cout << \"[descendant] \" <<  _wm->_world->getIterations() << ' ' << _wm->_winnerId << ' ' << _activeGenome.id << '\\n';\n  182:         // std::cout << \"[gathered] \" << _wm->_world->getIterations() << ' ' << _activeGenome.id;\n  183:         // for (int i = 0; i < _activeGenome.pucks.size(); ++i) {\n  187:         //                 // std::cout << ' ' << _activeGenome.pucks[i];\n  190:         // std::cout << ' ' << _activeGenome._distance;\n  228: void SimpleShellsControlArchitecture::assignFitness(std::vector<Genome> & genomes) {\n  235: \tfor (std::vector<Genome>::iterator itGenome = genomes.begin(); itGenome < genomes.end(); itGenome++) {\n  239: \t\t\t\tpuckTotals[i] += itGenome->pucks[i];\n  276: \tfor (std::vector<Genome>::iterator itGenome = genomes.begin(); itGenome < genomes.end(); itGenome++) {\n  282: \t\t\t\trating += double(itGenome->pucks[i]) * puckPrices[i];\n  283: \t\t\t\t// std::cout << itGenome->pucks[i] << ' ';\n  288: \t\t\tdouble degree = getSpecDeg(itGenome->pucks);\n  292: \t\t\titGenome->fitness = rating * (1.0 + value);\n  294: \t\t\titGenome->fitness = rating;\n  296: \t\t// std::cout << itGenome->fitness << std::endl;\n  301: void SimpleShellsControlArchitecture::gatherGenomes(std::vector<Genome*> & genePool, int commDistSquared) {\n  309: \t\t\tgenePool.push_back(controller->getGenome());\n  317: \t\t\t\tgenePool.push_back(controller->getGenome());\n  325: void SimpleShellsControlArchitecture::updateGenomes() {\n  326: //std::cout << \"Gathering Genomes...\";\n  327: \tgatherGenomes(_nearbyGenomes, gMaxCommDistSquared);\n  329: //std::cout << _nearbyGenomes.size() << \" found\\n\";\n  330: \tstd::vector<Genome*>::iterator itNewGenomes;\n  331: \tstd::vector<Genome>::iterator itGatheredGenomes;\n  332: \tfor (itNewGenomes = _nearbyGenomes.begin(); itNewGenomes < _nearbyGenomes.end(); itNewGenomes++) {\n  335: \t\tfor (itGatheredGenomes = _wm->_genePool.begin(); itGatheredGenomes < _wm->_genePool.end(); itGatheredGenomes++) {\n  336: \t\t\tsameDNA = (itGatheredGenomes->id == (*itNewGenomes)->id);\n  341: \t\t\tfor (int i = 0; i < gPuckColors; i++) itGatheredGenomes->pucks[i] = (*itNewGenomes)->pucks[i];\n  343: \t\t\t_wm->_genePool.push_back(**itNewGenomes);\n  344: \t\t\tGenome & genome = _wm->_genePool.back();\n  346: \t\t\tgenome.pucks.assign((*itNewGenomes)->pucks.begin(), (*itNewGenomes)->pucks.end());\n  347: \t\t\tgenome.parameters.assign((*itNewGenomes)->parameters.begin(), (*itNewGenomes)->parameters.end());\n  360: \tstd::vector<double> & parameters = _activeGenome.parameters;\n  459: void SimpleShellsControlArchitecture::simGenomeBehaviour() {\n  467: \tstd::vector<double> &parameters = _activeGenome.parameters;\n  469: \t_activeGenome.simSensorResults.clear();\n  504: \t\t_activeGenome.simSensorResults.push_back(result);\t\n  508: \t// \tfor(auto x : _activeGenome.simSensorResults[1]) {\n  525: double SimpleShellsControlArchitecture::calcBehaviorDistance(Genome &g1, Genome &g2) {\n  569: \tstd::vector<Genome>::const_iterator winner = selectWeighted(_wm->_genePool);\n  572: \tfor (int i = 0; i < _parameterCount; i++) _activeGenome.parameters[i] = winner->parameters[i];\n  575: \tmutate(_activeGenome.parameters, 0.1);\n  579: \tsimGenomeBehaviour();\n  593: \t\tstd::cout << _activeGenome.id << \" vs \" << gen.id << \" = \";\n  594: \t\tint test = calcBehaviorDistance(_activeGenome, gen);\n  604: \tstd::vector<Genome>::const_iterator winner = selectWeighted(_wm->_genePool);\n  607: \tfor (int i = 0; i < _parameterCount; i++) _activeGenome.parameters[i] = winner->parameters[i];\n  610: \tmutate(_activeGenome.parameters, 0.1);\n  614: \tsimGenomeBehaviour();\n  624: \tGenome winner = _wm->_genePool.begin() + Rand::randint(0, genomes.size());\n  628: \tfor (int i = 0; i < _parameterCount; i++) _activeGenome.parameters[i] = winner->parameters[i];\n  631: \tmutate(_activeGenome.parameters, 0.1);\n  635: \tsimGenomeBehaviour();\n  695: \t\t\tupdateGenomes();\n  703: \t\tdouble dx = _activeGenome._lastXPos - _wm->getXReal();\n  704: \t\tdouble dy = _activeGenome._lastYPos - _wm->getYReal();\n  705: \t\t_activeGenome._distance += sqrt(dx*dx + dy*dy);\n  706: \t\t_activeGenome._lastXPos = _wm->getXReal();\n  707: \t\t_activeGenome._lastYPos = _wm->getYReal();\n  712: \t\t// std::cout << \"[position] \" << gWorld->getIterations() << ' ' << _activeGenome.id << ' ' <<_wm->getXReal() << ' ' << _wm->getYReal() << '\\n';\n\n/Users/manu/git/monee-novelty/src/contrib/newscast/PopulationControlArchitecture.cpp:\n   43: \t\tcandidate = this->createRandomGenome();\n  200: \t\tparentA = this->createRandomGenome();\n  217: \t\tparentB = this->createRandomGenome();\n  245: \t\tparentA = this->createRandomGenome();\n  264: \t\tparentB = this->createRandomGenome();\n\n/Users/manu/git/monee-novelty/src/core/roborobo.cpp:\n  177: std::vector<Genome> gGenomes;\n  183: Uint32 gNextGenomeId;\n\n/Users/manu/git/monee-novelty/src/ext/EvolvingRobotAgentWorldModel.cpp:\n   20: /*std::vector<double>* EvolvingRobotAgentWorldModel::getGenome() // return pointer to original\n   25: ////void EvolvingRobotAgentWorldModel::setGenome( std::vector<double> &__genome ) // give pointer to original __genome\n   26: /*void EvolvingRobotAgentWorldModel::setGenome( std::vector<double> __genome ) // copy content of original __genome\n   31: bool EvolvingRobotAgentWorldModel::getNewGenomeStatus()\n   33: \treturn _isNewGenome;\n   36: void EvolvingRobotAgentWorldModel::setNewGenomeStatus( bool __status )\n   38: \t_isNewGenome = __status;\n\n/Users/manu/git/monee-novelty/src/ext/PerceptronBehaviorControlArchitecture.cpp:\n   37: \tif ( _wm->getNewGenomeStatus() ) // check for new NN parameters\n   40: \t\t_wm->setNewGenomeStatus(false);\n\n/Users/manu/git/monee-novelty/src/ext/Utils/Util.cpp:\n   20: NeuralControllerPtr Util::createRandomGenome(RobotAgentWorldModel *__wm) {\n\n278 matches across 21 files\n\n\nSearching 854 files for \"energyPuckId\" (case sensitive)\n\n/Users/manu/git/monee-novelty/config/bar:\n   14: energyPuckId = 0\n\n/Users/manu/git/monee-novelty/config/default.properties:\n   45: energyPuckId = 0\n\n/Users/manu/git/monee-novelty/config/screenshot.properties:\n   14: energyPuckId = 0\n\n/Users/manu/git/monee-novelty/config/test.properties:\n   82: energyPuckId = 0\n\n/Users/manu/git/monee-novelty/logs/properties_20170413-20h20m38s00000469ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170413-21h52m38s00000690ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170413-22h14m45s00000605ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170416-17h38m17s00000689ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170416-17h41m30s00000781ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170416-17h42m41s00000958ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170416-17h43m43s00000990ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-19h51m17s00000332ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-19h52m16s00000221ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-19h52m37s00000721ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-19h53m40s00000285ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-19h54m09s00000364ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h10m13s00000596ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h12m21s00000381ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h13m58s00000895ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h14m34s00000428ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h15m33s00000104ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h16m59s00000367ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h18m15s00000831ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h25m32s00000335ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h26m06s00000512ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h29m43s00000584ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h29m56s00000568ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h30m12s00000430ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h30m25s00000794ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h30m33s00000116ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h30m43s00000205ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h30m50s00000471ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h31m35s00000709ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h31m42s00000716ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h31m49s00000552ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h32m10s00000849ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h33m06s00000158ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h33m43s00000151ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h33m51s00000758ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h34m12s00000283ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h37m27s00000849ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h38m44s00000953ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h38m59s00000734ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h44m28s00000382ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h51m28s00000200ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170426-20h52m26s000000042ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h29m34s000000059ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h30m53s00000636ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h31m27s00000789ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h32m33s00000845ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h34m08s00000453ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h36m43s00000866ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h37m20s00000742ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h38m08s00000501ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h39m15s00000804ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h43m01s000000090ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h45m05s00000930ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h48m20s00000381ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h49m18s00000567ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h56m14s00000146ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-14h58m25s00000611ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h00m40s000000068ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h05m01s00000754ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h06m35s00000609ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h08m06s00000589ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h08m39s00000891ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h09m04s00000218ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h12m27s00000458ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h12m39s00000933ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h21m42s00000976ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h27m46s000000039ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h28m56s00000502ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h30m15s00000360ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h31m31s00000290ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h36m11s00000350ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h38m40s0000000005ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h38m54s00000322ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h39m33s00000266ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h44m12s00000972ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h49m18s00000126ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h50m05s00000273ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h50m54s00000323ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h51m52s000000053ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h52m23s000000081ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h56m33s00000166ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-15h56m56s00000695ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-16h02m17s00000242ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-16h16m48s00000266ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-16h17m30s00000190ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-16h17m41s00000600ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-16h41m07s00000370ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-16h43m26s00000656ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-16h52m25s00000889ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-16h52m39s00000840ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-16h56m50s00000419ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-16h57m47s000000026ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-16h58m38s00000910ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-16h59m09s00000636ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-16h59m28s00000369ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h01m39s00000350ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h01m52s00000741ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h02m00s000000035ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h02m07s00000687ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h02m16s00000525ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h02m28s00000273ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h04m13s00000721ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h04m47s00000924ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h31m22s00000818ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h33m53s00000909ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h34m07s00000734ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h46m14s00000113ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h49m05s00000429ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170428-17h50m49s00000419ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170518-17h24m27s00000926ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170518-17h25m06s000000015ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170518-17h26m08s00000431ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170518-17h35m09s00000331ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-11h48m08s00000785ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-11h53m21s00000877ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-11h54m29s00000450ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-11h56m07s00000742ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-11h57m00s00000421ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-11h57m28s00000886ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-11h58m03s000000043ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h00m15s00000138ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h01m32s00000201ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h02m26s00000636ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h06m19s00000251ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h07m47s000000027ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h08m10s00000407ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h09m14s00000709ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h10m24s00000834ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h12m18s00000352ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h18m14s00000282ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h19m34s000000060ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h20m58s00000826ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h21m07s000000089ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h30m55s00000190ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h33m40s00000429ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h35m06s00000733ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h35m30s000000066ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h35m53s00000327ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h36m15s00000272ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h36m47s00000726ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h37m14s000000015ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h39m20s00000746ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h39m38s000000096ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h39m57s00000940ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h41m33s00000983ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h41m56s00000779ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h42m17s00000213ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h43m09s00000483ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h44m14s000000047ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h44m47s00000447ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h46m17s00000944ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h54m17s00000959ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-12h56m50s00000180ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-13h03m29s00000697ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-13h04m20s00000229ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-13h05m19s00000190ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-13h05m26s00000633ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-13h07m03s00000254ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-13h08m05s00000122ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-13h10m59s00000253ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-13h11m48s00000573ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-13h11m57s00000504ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-13h12m42s00000772ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-13h18m29s00000119ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-13h19m05s00000442ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-15h43m14s00000363ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-15h43m48s000000033ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-16h21m51s000000081ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-16h23m15s00000387ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-16h24m44s00000205ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-16h30m46s00000341ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-16h55m33s00000741ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170519-16h55m54s00000849ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-16h19m09s00000437ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-16h20m54s00000375ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-16h27m00s00000832ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-16h28m59s00000433ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-16h30m25s00000493ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-16h33m52s00000895ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-16h39m30s00000374ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-16h42m05s00000353ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-16h51m01s000000068ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-16h59m41s00000125ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-17h00m58s00000263ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-17h08m43s00000331ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-17h09m34s00000469ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-17h13m43s00000583ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-17h28m51s00000846ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-17h32m32s000000086ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-17h33m31s00000485ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-17h34m00s00000261ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-17h35m32s00000737ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170525-17h40m02s00000752ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-13h02m47s00000633ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-13h04m43s00000750ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-13h04m59s00000964ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-13h23m30s00000187ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-14h03m10s00000982ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-14h04m06s00000745ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-14h04m39s00000982ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-14h25m56s00000764ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-14h26m47s00000528ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-14h27m16s00000221ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-14h27m38s00000738ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-14h28m20s00000353ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-14h34m02s00000485ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-14h37m32s00000153ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-14h39m57s00000737ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-14h40m54s00000478ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-14h41m30s000000049ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-15h32m40s00000709ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-15h34m43s00000962ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-15h41m07s00000278ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-15h44m43s00000494ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-15h45m59s00000385ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-15h47m27s00000708ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-16h06m04s00000877ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-16h15m59s00000139ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h11m13s00000163ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h12m11s00000223ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h12m43s00000533ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h23m24s00000161ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h23m44s00000553ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h26m43s00000877ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h27m52s000000026ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h28m25s00000508ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h28m57s00000572ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h29m40s00000676ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h30m26s00000713ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h30m52s00000656ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h31m00s00000155ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h31m19s00000522ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170526-17h32m31s00000139ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h10m45s00000295ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h12m21s00000679ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h12m45s00000620ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h15m33s000000094ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h19m41s00000103ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h24m54s00000977ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h27m03s00000613ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h28m26s00000160ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h30m13s00000950ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h31m14s000000064ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h37m03s00000551ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h38m58s00000225ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h39m29s00000685ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h40m40s0000000006ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h46m09s000000056ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h46m16s00000698ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h49m12s00000738ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h49m27s00000645ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h50m49s000000050ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h51m17s00000810ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h52m02s00000267ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h52m47s00000349ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h52m51s00000993ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h52m55s00000302ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h53m42s00000226ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h56m20s00000285ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-13h59m27s00000608ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h00m07s00000517ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h00m10s00000599ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h01m03s00000693ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h01m10s00000144ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h01m16s00000205ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h02m00s00000496ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h02m35s000000017ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h03m22s00000881ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h03m29s00000431ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h20m34s00000882ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h23m45s00000419ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h26m11s00000954ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h27m36s00000576ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h28m50s00000455ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h33m04s00000537ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h33m32s00000534ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h34m30s00000513ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h34m59s00000732ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h38m35s00000313ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h39m27s00000436ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h40m57s00000124ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-14h45m26s00000956ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-15h33m43s00000665ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-15h34m43s00000854ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-15h39m14s00000437ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-15h48m18s00000561ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-15h48m40s000000028ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-16h09m17s00000747ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-16h09m34s00000683ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/logs/properties_20170528-16h09m53s00000568ms.txt:\n  488: energyPuckId=0\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentWorldModel.h:\n   24:         int _energyPuckId;      /// < Id of puck type that gives energy, this can be disregarded as a task (defaults to -1, set through config file)\n   26:         bool _excludeEnergyPucks; /// < If true, pucks of type _energyPuckId are disregarded as a task, if false, energy pucks also count as task (defaults to true)\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentWorldModel.cpp:\n   14: \t_energyPuckId = -1;\n   30: \tgProperties.checkAndGetPropertyValue(\"energyPuckId\", &_energyPuckId, false);\n   70: \tif (g == _energyPuckId) {\n   88: \tif (g != _energyPuckId  || !_excludeEnergyPucks) {\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  184:         //         if (i == _wm->_energyPuckId && _wm->_excludeEnergyPucks)\n  238: \t\t\tif (i != _wm->_energyPuckId  || !_wm->_excludeEnergyPucks) {\n  247: \t\tif (i != _wm->_energyPuckId  || !_wm->_excludeEnergyPucks) {\n  259: \t\tif (i != _wm->_energyPuckId || !_wm->_excludeEnergyPucks) {\n  281: \t\t\tif (i != _wm->_energyPuckId || !_wm->_excludeEnergyPucks) {\n\n/Users/manu/git/monee-novelty/scripts/monee.sh:\n   20: DEFINE_integer 'energyPuckId' '-1' 'Which pucktype is used as energy point instead of task'\n   66: ENERGYIDREP=s/--ENERGYPUCKID/${FLAGS_energyPuckId}/g\n\n/Users/manu/git/monee-novelty/template/OneColour.properties:\n   14: energyPuckId = --ENERGYPUCKID\n\n/Users/manu/git/monee-novelty/template/TwoCenters.25.properties:\n   22: energyPuckId = --ENERGYPUCKID\n\n/Users/manu/git/monee-novelty/template/TwoCenters.35.properties:\n   14: energyPuckId = --ENERGYPUCKID\n\n/Users/manu/git/monee-novelty/template/TwoCenters.45.properties:\n   14: energyPuckId = --ENERGYPUCKID\n\n/Users/manu/git/monee-novelty/template/TwoCenters.50.properties:\n   14: energyPuckId = --ENERGYPUCKID\n\n/Users/manu/git/monee-novelty/template/TwoCenters.properties:\n   14: energyPuckId = --ENERGYPUCKID\n\n/Users/manu/git/monee-novelty/template/TwoColours-NoMarket.properties:\n   14: energyPuckId = --ENERGYPUCKID\n\n/Users/manu/git/monee-novelty/template/TwoColours.closerange.properties:\n   14: energyPuckId = --ENERGYPUCKID\n\n/Users/manu/git/monee-novelty/template/TwoColours.largespread.properties:\n   14: energyPuckId = --ENERGYPUCKID\n\n/Users/manu/git/monee-novelty/template/TwoColours.longegg.properties:\n   14: energyPuckId = --ENERGYPUCKID\n\n/Users/manu/git/monee-novelty/template/TwoColours.properties:\n   14: energyPuckId = --ENERGYPUCKID\n\n/Users/manu/git/monee-novelty/template/TwoColours.uneven.properties:\n   14: energyPuckId = --ENERGYPUCKID\n\n320 matches across 310 files\n\n\nSearching 854 files for \"_energyPuckId\" (case sensitive)\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentWorldModel.h:\n   24:         int _energyPuckId;      /// < Id of puck type that gives energy, this can be disregarded as a task (defaults to -1, set through config file)\n   26:         bool _excludeEnergyPucks; /// < If true, pucks of type _energyPuckId are disregarded as a task, if false, energy pucks also count as task (defaults to true)\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentWorldModel.cpp:\n   14: \t_energyPuckId = -1;\n   30: \tgProperties.checkAndGetPropertyValue(\"energyPuckId\", &_energyPuckId, false);\n   70: \tif (g == _energyPuckId) {\n   88: \tif (g != _energyPuckId  || !_excludeEnergyPucks) {\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  184:         //         if (i == _wm->_energyPuckId && _wm->_excludeEnergyPucks)\n  238: \t\t\tif (i != _wm->_energyPuckId  || !_wm->_excludeEnergyPucks) {\n  247: \t\tif (i != _wm->_energyPuckId  || !_wm->_excludeEnergyPucks) {\n  259: \t\tif (i != _wm->_energyPuckId || !_wm->_excludeEnergyPucks) {\n  281: \t\t\tif (i != _wm->_energyPuckId || !_wm->_excludeEnergyPucks) {\n\n/Users/manu/git/monee-novelty/scripts/monee.sh:\n   66: ENERGYIDREP=s/--ENERGYPUCKID/${FLAGS_energyPuckId}/g\n\n12 matches across 4 files\n\n\nSearching 863 files for \"step\" (case sensitive)\n\n/Users/manu/git/monee-novelty/roborobo:\n    <binary>\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liobehaviorlib/src/PerceptronBehavior.cpp:\n   33: //manuel: this is where the input weights are used to compute next step\n   40: \t_perceptron->step(_sensorValues);\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/BalanceFitnessWebots.h:\n   65: \t * @return Fitness increment for the current time-step (think 'reward' in reinforcement learning)\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/ESRealMutation.h:\n   80: \t * Uncorrelated Mutation with adapting local step size.\n  158: \tvoid deriveTau(unsigned chromLen, bool multi_step)\n  162: \t\t_tauLocal = multi_step ? (1.0 / sqrt(2.0 * sqrt(n))) : 0.0;\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/Evolver.h:\n   82:  *  @tparam Fitness Class that calculates fitness increments at every timestep of the EA\n  606: \t * All individuals get a \"free-of-charge\" number of steps (ie. iterations\n  607: \t * step below zero are free) to get out of trouble before fitness calculation\n  636: \t * Number of timesteps spent to get a robot away from walls (hack to overcome Player/Stage sticky wall behaviour)\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/ObstacleAvoidanceFitnessD3D.h:\n   59: \t * @return Fitness increment for the current time-step (think 'reward' in reinforcement learning)\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/ObstacleAvoidanceFitnessPlayerStage.h:\n   59: \t * @return Fitness increment for the current time-step (think 'reward' in reinforcement learning)\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/ObstacleAvoidanceFitnessWebots.h:\n   59: \t * @return Fitness increment for the current time-step (think 'reward' in reinforcement learning)\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/liogenetics/genetics/Phototaxis.h:\n   59: \t * @return Fitness increment for the current time-step (think 'reward' in reinforcement learning)\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/lioneuralnet/neuralnets/MultiLayeredPerceptron.h:\n   56: \t\tvoid step( LIOReal *__inputValues );\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/lioneuralnet/neuralnets/SimplePerceptron.h:\n   56: \t\tvoid step( LIOReal *__inputValues );\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/lioneuralnet/src/MultiLayeredPerceptron.cpp:\n  113: void MultiLayeredPerceptron::step( LIOReal *__inputValues )\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/lioneuralnet/src/SimplePerceptron.cpp:\n   57: void SimplePerceptron::step( LIOReal *__inputValues )\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/lioutilities/lioutils/Mathlib.h:\n   23: \t\t// Tanh lookup table - from -8 to 8 (included) with a step size of 0.062745098. Fixed point precision is 8.\n\n/Users/manu/git/monee-novelty/include/contrib/LioLib/lioutilities/src/Fixed32.cpp:\n  619: //\tcout << \" to +2.0, stepsize = \";\n\n/Users/manu/git/monee-novelty/include/contrib/newscast/NewscastAgentGroup.h:\n   31: \tvirtual void update(int currentTime); // should be called every T timesteps\n\n/Users/manu/git/monee-novelty/include/contrib/newscast/PopulationMember.h:\n   31: \tvirtual void update(int currentTime); // should be called every T timesteps\n\n/Users/manu/git/monee-novelty/include/core/Agents/Agent.h:\n   28: \t//The velocity of the dot - in fact, the number of pixels movement per step.\n   51: \t// controller step\n   52: \tvirtual void stepBehavior() = 0;\n   53: \tvirtual void stepBehavior(Uint8* __keyboardStates) = 0;\n\n/Users/manu/git/monee-novelty/include/core/Agents/InspectorAgent.h:\n   30: \t\t// controller step\n   31: \t\tvoid stepBehavior();\n   32: \t\tvoid stepBehavior(Uint8* __keyboardStates);\n\n/Users/manu/git/monee-novelty/include/core/Agents/RobotAgent.h:\n   89: \tvoid stepBehavior();\n   90: \tvoid stepBehavior(Uint8* __keyboardStates);\n   92: \tvoid callObserver(); // call the embedded genetic engine -- always called before stepBehavior.\n  116: \tvoid updateFitness(); // step-update of the fitness - performs updates needed at this time step -- automatically called through world.updateWorld\n  158: \t// controller step\n  159: \tvoid step();\n  160: \tvoid step(Uint8* __keyStates);\n\n/Users/manu/git/monee-novelty/include/core/BehaviorControlArchitectures/BehaviorControlArchitecture.h:\n   31: \t\tvirtual void step() = 0;\n\n/Users/manu/git/monee-novelty/include/core/Observers/AgentObserver.h:\n   33: \t\tvirtual void step();\n\n/Users/manu/git/monee-novelty/include/core/Observers/Observer.h:\n   25: \t\tvirtual void step();\n\n/Users/manu/git/monee-novelty/include/core/Observers/WorldObserver.h:\n   34: \t\tvirtual void step();\n\n/Users/manu/git/monee-novelty/include/core/Utilities/SDL_gfxPrimitives.h:\n  189: /* (s = number of steps) */\n\n/Users/manu/git/monee-novelty/include/ext/BehaviorControlArchitectures/PerceptronBehaviorControlArchitecture.h:\n   35: \t\tvoid step();\t\t// if (_wm._age<0) then move randomly (useful to unstuck robot in evolution mode)\n\n/Users/manu/git/monee-novelty/include/ext/rjh/DifferentialControlArchitecture.h:\n   46: \tvirtual void step() = 0;\n\n/Users/manu/git/monee-novelty/include/ext/rjh/EvolutionaryControlArchitecture.h:\n   37: \tvirtual void step();\n   49: \tstatic int stepsPerCandidate;\n   51: \tconst static int stepsPerFree = 150;\n   52: \tconst static int stepsPerRandomFree = 50;\n   61: \tint stepsDone;\n\n/Users/manu/git/monee-novelty/include/ext/Utils/Controller.h:\n   36: \tvirtual void step(double &left, double &right) = 0;\n   50: \tvirtual void SetMutationStepSize(int i, double stepSize);\n\n/Users/manu/git/monee-novelty/include/ext/Utils/NeuralController.h:\n   44: \tvirtual void step(double &left, double &right);\n\n/Users/manu/git/monee-novelty/include/ext/World/Puck.h:\n   27:         void step();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentObserver.h:\n   32: \t\tvoid step();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsControlArchitecture.h:\n   55: \t\tvoid step();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsWorldObserver.h:\n   26: \t\tvoid step();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentObserver.cpp:\n   24: void SimpleShellsAgentObserver::step()\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  644: void SimpleShellsControlArchitecture::step() {\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsWorldObserver.cpp:\n   22: void SimpleShellsWorldObserver::step()\n\n/Users/manu/git/monee-novelty/scripts/analysis/ages.sh:\n    6: \tawk 'BEGIN{stepsize=5000} \\\n    7: \t\t{i = int($1/stepsize); \\\n   14: \t\t{print i*stepsize, ages[i]}}' $run | \\\n   21: awk 'BEGIN{stepsize=5000} \\\n   22: \t{i = int($1/stepsize); \\\n   29: \t{print i*stepsize, ages[i]}}' *.pressure-stats | \\\n\n/Users/manu/git/monee-novelty/scripts/analysis/collisions.sh:\n   10: # Generate timestep column \n\n/Users/manu/git/monee-novelty/scripts/analysis/count-inseminations.sh:\n   20: # Generate timestep column \n\n/Users/manu/git/monee-novelty/scripts/analysis/counts.sh:\n   20: # Generate timestep column \n\n/Users/manu/git/monee-novelty/src/contrib/newscast/NewscastInstance.cpp:\n   41:  * this is the active part of the newscast algorithm. It should be called every T timesteps.\n\n/Users/manu/git/monee-novelty/src/core/AgentObserver.cpp:\n   33: void AgentObserver::step()\n\n/Users/manu/git/monee-novelty/src/core/InspectorAgent.cpp:\n   34: void InspectorAgent::stepBehavior( ) // the controller\n   43: void InspectorAgent::stepBehavior( Uint8* __keyboardStates) // the controller\n\n/Users/manu/git/monee-novelty/src/core/Observer.cpp:\n   27: void Observer::step()\n\n/Users/manu/git/monee-novelty/src/core/roborobo.cpp:\n  441: \t\t\t\t\tstd::cout << \"pause mode is ON. (at \" << gWorld->getIterations() << \" steps)\" << std::endl;\n  817: \t\t\t\tinspectorAgent->stepBehavior(__keyboardStates);\n\n/Users/manu/git/monee-novelty/src/core/RobotAgent.cpp:\n  261: \t_agentObserver->step();\n  264: void RobotAgent::stepBehavior() {\n  268: \tif (_wm->_isAlive) // note: reviving a robot is performed in stepGenetics()\n  271: \t\t_behavior->step();\n  277: void RobotAgent::stepBehavior(Uint8* __keyboardStates) {\n\n/Users/manu/git/monee-novelty/src/core/RobotAgentWorldInterface.cpp:\n   25: \twith controller hardware limitations). In this method, two important steps are performed:\n   44: \t//\t__wm->_agentAbsoluteOrientation += 360; // assume cannot go below -360deg in one step only (TODO: explicit check)\n\n/Users/manu/git/monee-novelty/src/core/SDL_gfxPrimitives.c:\n 2310: \toct = startoct - 1; // we increment as first step in loop\n 4559:     double *x, *y, t, stepsize;\n 4575:     stepsize=(double)1.0/(double)s;\n 4600: \tt += stepsize;\n\n/Users/manu/git/monee-novelty/src/core/World.cpp:\n  160: \t// note 3: observer/genetics is done *before* control to enable initialization prior to the first world step update.\n  206: \t_worldObserver->step();\n  211: \t\t\tit->step();\n  247: \t// controller step\n  250: \t\t\tagents[shuffledIndex[i]]->stepBehavior();\n  253: \t\t\t\tagents[shuffledIndex[i]]->stepBehavior(__keyboardStates);\n  255: \t\t\t\tagents[shuffledIndex[i]]->stepBehavior();\n\n/Users/manu/git/monee-novelty/src/core/WorldObserver.cpp:\n   30: void WorldObserver::step()\n\n/Users/manu/git/monee-novelty/src/ext/PerceptronBehaviorControlArchitecture.cpp:\n   34: void PerceptronBehaviorControlArchitecture::step()\n\n/Users/manu/git/monee-novelty/src/ext/Puck.cpp:\n   26: void Puck::step() {\n\n/Users/manu/git/monee-novelty/src/ext/RobotAgentWorldInterfaceDangerWorld.cpp:\n   89: \t//\t__wm->_agentAbsoluteOrientation += 360; // assume cannot go below -360deg in one step only (TODO: explicit check)\n\n/Users/manu/git/monee-novelty/src/ext/rjh/EvolutionaryControlArchitecture.cpp:\n   12: int EvolutionaryControlArchitecture::stepsPerCandidate = 500; // should be overwritten by properties file\n   18: \tthis->stepsDone = -1;\n   32: void EvolutionaryControlArchitecture::step(){\n   35: \t\tif (stepsDone == 0) {\n   41: \t\tif (stepsDone >= 0) {\n   42: \t\t\t// determine the fitness during the past step\n   43: \t\t\tdouble stepFitness = this->calculateStepFitness();\n   47: \t\t\t\tcandidateFitness = (candidateFitness * stepsDone + stepFitness) / (stepsDone + 1);\n   49: \t\t\t\tcandidateFitness += stepFitness;\n   52: \t\t\t// mark the past step as completed\n   53: \t\t\tstepsDone++;\n   57: \t\tif (stepsDone == stepsPerCandidate) {\n   62: \t\t\tstepsDone = -1;\n   69: \t\tif (stepsDone == -1) { // indicates a new candidate must be found\n   76: \t\t\tthis->stepsDone = 0;\n   86: \t\t\tcandidate->step(left,right);\n   93: \t\tif (stepsDone == 0) {\n  100: \t\tif (stepsDone == stepsPerRandomFree) {\n  103: \t\t\tstepsDone = 0;\n  105: \t\t\tstepsDone++;\n  112: \t\tif (stepsDone == 0) {\n  117: \t\tif (stepsDone == stepsPerFree) {\n  120: \t\t\tstepsDone = 0;\n  122: \t\t\t\tthis->stepsDone = -1; // there's no controller for evaluation, find one\n  148: \t\t\tstepsDone++;\n\n/Users/manu/git/monee-novelty/src/ext/Utils/Controller.cpp:\n   52: void Controller::SetMutationStepSize(int i, double stepSize) {\n   53: \tthis->mutationStepSizes[i] = stepSize;\n\n/Users/manu/git/monee-novelty/src/ext/Utils/NeuralController.cpp:\n   52: void NeuralController::step(double &left, double &right) {\n   79: \tneuralNet->step(&distances->front());\n\n/Users/manu/git/monee-novelty/src/ext/Utils/Util.cpp:\n   98: \tdouble stepSize = 0;\n  102: \t\t\tstepSize += boost::dynamic_pointer_cast<NeuralController> (parents->at(j))->GetMutationStepSize(i);\n  105: \t\tresult->SetMutationStepSize(i, stepSize / parents->size());\n\n152 matches across 58 files\n\n\nSearching 863 files for \"step()\" (case sensitive)\n\n/Users/manu/git/monee-novelty/include/core/Agents/RobotAgent.h:\n  159: \tvoid step();\n\n/Users/manu/git/monee-novelty/include/core/BehaviorControlArchitectures/BehaviorControlArchitecture.h:\n   31: \t\tvirtual void step() = 0;\n\n/Users/manu/git/monee-novelty/include/core/Observers/AgentObserver.h:\n   33: \t\tvirtual void step();\n\n/Users/manu/git/monee-novelty/include/core/Observers/Observer.h:\n   25: \t\tvirtual void step();\n\n/Users/manu/git/monee-novelty/include/core/Observers/WorldObserver.h:\n   34: \t\tvirtual void step();\n\n/Users/manu/git/monee-novelty/include/ext/BehaviorControlArchitectures/PerceptronBehaviorControlArchitecture.h:\n   35: \t\tvoid step();\t\t// if (_wm._age<0) then move randomly (useful to unstuck robot in evolution mode)\n\n/Users/manu/git/monee-novelty/include/ext/rjh/DifferentialControlArchitecture.h:\n   46: \tvirtual void step() = 0;\n\n/Users/manu/git/monee-novelty/include/ext/rjh/EvolutionaryControlArchitecture.h:\n   37: \tvirtual void step();\n\n/Users/manu/git/monee-novelty/include/ext/World/Puck.h:\n   27:         void step();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentObserver.h:\n   32: \t\tvoid step();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsControlArchitecture.h:\n   55: \t\tvoid step();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsWorldObserver.h:\n   26: \t\tvoid step();\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentObserver.cpp:\n   24: void SimpleShellsAgentObserver::step()\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  644: void SimpleShellsControlArchitecture::step() {\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsWorldObserver.cpp:\n   22: void SimpleShellsWorldObserver::step()\n\n/Users/manu/git/monee-novelty/src/core/AgentObserver.cpp:\n   33: void AgentObserver::step()\n\n/Users/manu/git/monee-novelty/src/core/Observer.cpp:\n   27: void Observer::step()\n\n/Users/manu/git/monee-novelty/src/core/RobotAgent.cpp:\n  261: \t_agentObserver->step();\n  271: \t\t_behavior->step();\n\n/Users/manu/git/monee-novelty/src/core/World.cpp:\n  206: \t_worldObserver->step();\n  211: \t\t\tit->step();\n\n/Users/manu/git/monee-novelty/src/core/WorldObserver.cpp:\n   30: void WorldObserver::step()\n\n/Users/manu/git/monee-novelty/src/ext/PerceptronBehaviorControlArchitecture.cpp:\n   34: void PerceptronBehaviorControlArchitecture::step()\n\n/Users/manu/git/monee-novelty/src/ext/Puck.cpp:\n   26: void Puck::step() {\n\n/Users/manu/git/monee-novelty/src/ext/rjh/EvolutionaryControlArchitecture.cpp:\n   32: void EvolutionaryControlArchitecture::step(){\n\n25 matches across 23 files\n\n\nSearching 893 files for \"_agentId\" (case sensitive)\n\n/Users/manu/git/monee-novelty/include/core/WorldModels/RobotAgentWorldModel.h:\n   43: \t\tint _agentId;\n\n/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp:\n  315: \t\t\tif (isRadioConnection(agent->getWorldModel()->_agentId,_wm->_agentId)) {\n  400: \t} else if (_wm->_agentId == 1871298379817) {\n  508: \t// if (_wm->_agentId == 1) {\n\n/Users/manu/git/monee-novelty/src/contrib/Organism.cpp:\n   77: \t\t\t\t\toLog << (*it2)->getWorldModel()->_agentId << \" \";\n  155: \t\tif ((*it)->getWorldModel()->_agentId == robot->getWorldModel()->_agentId) {\n  194: \t\tif ((*it)->getWorldModel()->_agentId == robot->getWorldModel()->_agentId) {\n  329: \t\t\tgLogFile << (*it2)->getWorldModel()->_agentId << \" \";\n  336: \t\tgLogFile << (*it2)->getWorldModel()->_agentId << \" \";\n  391: \t\t\tstd::cout << \" \" << (*it)->getWorldModel()->_agentId;\n  409: \t\t\tsizeLog << \",\" << (*it)->getWorldModel()->_agentId;\n\n/Users/manu/git/monee-novelty/src/core/RobotAgent.cpp:\n   36: \t_wm->_agentId = gAgentCounter;\n  158: \tout << _wm->_agentId;\n  167: \t\t\tstd::cout << \"[warning] Initial X coordinate for agent #\" << _wm->_agentId << \" not found. Random pick ([!] reset may alter environment, check with x-ray mode [!]).\" << std::endl;\n  180: \t\t\tstd::cout << \"[warning] Initial Y coordinate for agent #\" << _wm->_agentId << \" not found. Random pick ([!] reset may alter environment, check with x-ray mode [!]).\" << std::endl;\n  222: \t\t\tstd::cout << \"[warning] Initial orientation  for agent #\" << _wm->_agentId << \" not found. Random pick.\" << std::endl;\n  288: \t\tif (gInspectAgent && gAgentIndexFocus == _wm->_agentId) {\n  289: \t\t\tstd::cout << \"Robot #\" << _wm->_agentId << \" : ( \";\n  299: \tif (gAgentIndexFocus != _wm->_agentId)\n  575: \tint thisId = this->_wm->_agentId;\n  609: \t\tgCollisionLogFile << this->_wm->_world->getIterations() << \" #\" << this->_wm->_agentId << std::endl;\n  661: \t\tstr += boost::lexical_cast<std::string > (this->_wm->_agentId);\n  681: \tif (_wm->_agentId == gAgentIndexFocus && gUserCommandMode) // && _iterations%10 < 5)\n  713: \t\tif (_wm->_agentId == gAgentIndexFocus && gUserCommandMode) {\n  793: \t\t\tregister_surface(_x, _y, gAgentPositiveMaskImage, gEnvironmentImage, _wm->_agentId + 1000); // [!n] CONVENTION: _agentId+100 to avoid confusion with empty space (0: empty ; 1: static object; 2-99: reserved for other static objects)\n  795: \t\t\tregister_surface(_x, _y, gAgentNegativeMaskImage, gEnvironmentImage, _wm->_agentId + 1000); // [!n] CONVENTION: _agentId+100 to avoid confusion with empty space (0: empty ; 1: static object; 2-99: reserved for other static objects)\n  797: \t\t\tregister_surface(_x, _y, gAgentMaskImage, gEnvironmentImage, _wm->_agentId + 1000); // [!n] CONVENTION: _agentId+100 to avoid confusion with empty space (0: empty ; 1: static object; 2-99: reserved for other static objects)\n  844: \t\tint id = _wm->_agentId;\n  884: \tint id = _wm->_agentId;\n  895: \t\t\t\t\tother->removeNeighbour(gWorld->getAgent(this->_wm->_agentId));\n  907: \t\tint otherId = otherWM->_agentId;\n  954: \t\tother->addNeighbour(gWorld->getAgent(this->_wm->_agentId));\n  979: \t\torganism->addRobot(gWorld->getAgent(this->_wm->_agentId));\n  983: \t\tother->addNeighbour(gWorld->getAgent(this->_wm->_agentId));\n  986: \t\tgLogFile << \"Adding agent \" << this->_wm->_agentId << \" to organism: \" << organism->getId() << std::endl;\n  993: \t\tother->addNeighbour(gWorld->getAgent(this->_wm->_agentId));\n  996: \t\tgLogFile << \"Adding agent \" << other->_wm->_agentId << \" to organism: \" << organism->getId() << std::endl;\n  999: \t\tgLogFile << \"Creating new organism: \" << organism->getId() << \" robots: \" << this->_wm->_agentId << \", \" << other->_wm->_agentId << std::endl;\n 1000: \t\torganism->addRobot(gWorld->getAgent(this->_wm->_agentId));\n 1007: \t\tother->addNeighbour(gWorld->getAgent(this->_wm->_agentId));\n 1022: \t\tif ((*it)->_wm->_agentId == neighbour->_wm->_agentId) {\n 1049: \t\tgLogFile << \"Agent: \" << this->_wm->_agentId << \" letting go of organism: \" << this->getOrganism()->getId() << std::endl;\n 1050: \t\tthis->getOrganism()->removeRobot(gWorld->getAgent(this->_wm->_agentId));\n 1054: \t\t\t(*it)->removeNeighbour(gWorld->getAgent(this->_wm->_agentId));\n 1083: \t\t\tif ((*it)->_wm->_agentId == other->_wm->_agentId) {\n\n/Users/manu/git/monee-novelty/src/core/RobotAgentWorldInterface.cpp:\n   64: \tRobotAgentPtr agent = gWorld->getAgent(__wm->_agentId);\n\n/Users/manu/git/monee-novelty/src/ext/RobotAgentWorldInterfaceDangerWorld.cpp:\n   46: \tif ( __wm->_agentId == 0 )\n   83: \tstd::cout << \"Interface(\" << __wm->_agentId << \") : \" << __wm->_agentAbsoluteOrientation << std::endl ;\n\n57 matches across 6 files\n",
			"settings":
			{
				"buffer_size": 121222,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/Users/manu/git/monee-novelty/include/core/WorldModels/RobotAgentWorldModel.h",
			"settings":
			{
				"buffer_size": 3805,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/manu/git/monee-novelty/config/default.properties",
			"settings":
			{
				"buffer_size": 13334,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "roborobo.cpp",
			"settings":
			{
				"buffer_size": 52532,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/manu/git/monee-novelty/include/core/RoboroboMain/roborobo.h",
			"settings":
			{
				"buffer_size": 11277,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp",
			"settings":
			{
				"buffer_size": 25369,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentWorldModel.cpp",
			"settings":
			{
				"buffer_size": 3668,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 320.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"color",
				"Colorsublime: Install Theme"
			],
			[
				"package",
				"Package Control: List Unmanaged Packages"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"colorsubli",
				"Colorsublime: Browse Themes"
			],
			[
				"pack",
				"Package Control: Remove Package"
			]
		],
		"width": 470.0
	},
	"console":
	{
		"height": 153.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/manu/git/monee-novelty",
		"/Users/manu/git/monee-novelty/config",
		"/Users/manu/git/monee-novelty/prj",
		"/Users/manu/git/monee-novelty/prj/SimpleShells",
		"/Users/manu/git/monee-novelty/prj/SimpleShells/include",
		"/Users/manu/git/monee-novelty/prj/SimpleShells/src",
		"/Users/manu/git/monee-novelty/Rstats",
		"/Users/manu/git/monee-novelty/src",
		"/Users/manu/git/monee-novelty/src/core"
	],
	"file_history":
	[
		"/Users/manu/git/monee-novelty/Rstats/puckcount-before.csv",
		"/Users/manu/git/monee-novelty/Rstats/puckcount.csv",
		"/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsControlArchitecture.h",
		"/Users/manu/git/monee-novelty/src/core/World.cpp",
		"/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentWorldModel.cpp",
		"/Users/manu/git/monee-novelty/config/ToSteelBlue.properties",
		"/Users/manu/git/monee-novelty/include/ext/BehaviorControlArchitectures/PerceptronBehaviorControlArchitecture.h",
		"/Users/manu/git/monee-novelty/include/core/BehaviorControlArchitectures/BehaviorControlArchitecture.h",
		"/Users/manu/git/monee-novelty/include/core/Agents/RobotAgent.h",
		"/Users/manu/git/monee-novelty/prj/SimpleShells/include/SimpleShellsAgentWorldModel.h",
		"/Users/manu/git/monee-novelty/include/core/Utilities/Misc.h",
		"/Users/manu/git/monee-novelty/src/contrib/Properties.cpp",
		"/Users/manu/git/monee-novelty/src/core/RobotAgent.cpp",
		"/Users/manu/git/monee-novelty/config/default.properties",
		"/Users/manu/git/monee-novelty/include/core/WorldModels/RobotAgentWorldModel.h",
		"/Users/manu/git/monee-ubu/include/core/World/World.h",
		"/Users/manu/git/monee-ubu/Rstats/sample_sensors.csv",
		"/Users/manu/git/monee-ubu/prj/SimpleShells/src/SimpleShellsWorldObserver.cpp",
		"/Users/manu/git/monee-ubu/Makefile",
		"/Users/manu/git/monee-ubu/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp",
		"/Users/manu/git/monee-ubu/src/core/RobotAgent.cpp",
		"/Users/manu/git/monee-ubu/Rstats/sample-behaviour.R",
		"/Users/manu/git/monee-ubu/test-data/.RData",
		"/Users/manu/git/monee-ubu/src/ext/SimpleShellsConfigurationLoader.cpp",
		"/Users/manu/git/monee-ubu/prj/SimpleShells/include/SimpleShellsControlArchitecture.h",
		"/Users/manu/git/monee-ubu/config/default.properties",
		"/Users/manu/git/monee-ubu/include/core/RoboroboMain/roborobo.h",
		"/Users/manu/git/monee-ubu/prj/SimpleShells/src/SimpleShellsAgentObserver.cpp",
		"/Users/manu/git/monee-ubu/prj/SimpleShells/src/SimpleShellsAgentWorldModel.cpp",
		"/Users/manu/git/monee-ubu/include/ext/RangeSensor.h",
		"/Users/manu/git/monee-ubu/src/ext/RangeSensor.cpp",
		"/Users/manu/git/monee-ubu/include/core/Utilities/SDL_gfxPrimitivesExtra.h",
		"/Users/manu/git/monee-ubu/output.txt",
		"/Users/manu/git/monee-ubu/output2.txt",
		"/Users/manu/git/monee-ubu/include/core/WorldModels/RobotAgentWorldModel.h",
		"/Users/manu/git/monee-ubu/src/core/World.cpp",
		"/Users/manu/git/monee-ubu/src/core/roborobo.cpp",
		"/Users/manu/git/monee-ubu/include/core/Agents/RobotAgent.h",
		"/Users/manu/git/monee-ubu/include/contrib/LioLib/liogenetics/genetics/CompleteMutator.h",
		"/Users/manu/git/monee-ubu/include/core/Utilities/ExtendedProperties.h",
		"/Users/manu/git/monee-ubu/src/core/ExtendedProperties.cpp",
		"/Users/manu/Downloads/healthcare-04-00050 (1).xml",
		"/Users/manu/git/monee-ubu/test-data/rotor_pref.csv",
		"/Users/manu/git/monee-ubu/include/contrib/LioLib/liogenetics/genetics/BalanceFitnessWebots.h",
		"/Users/manu/Library/Application Support/Sublime Text 3/Packages/Colorsublime - Themes/Gooey.tmTheme",
		"/Users/manu/git/monee-ubu/test.test",
		"/Users/manu/git/monee-ubu/include/contrib/LioLib/liobehaviorlib/src/PerceptronBehavior.cpp",
		"/Users/manu/git/monee-ubu/include/contrib/LioLib/liobehaviorlib/behaviors/PerceptronBehavior.h",
		"/Users/manu/git/monee-ubu/include/contrib/LioLib/liogenetics/src/Genome.cpp",
		"/Users/manu/git/monee-ubu/src/ext/Utils/Util.cpp",
		"/Users/manu/git/monee-ubu/scripts/run_monee.sh",
		"/Users/manu/git/monee-ubu/include/core/BehaviorControlArchitectures/BehaviorControlArchitecture.h",
		"/Users/manu/git/monee-ubu/src/core/BehaviorControlArchitecture.cpp",
		"/Users/manu/git/monee-ubu/src/ext/PerceptronBehaviorControlArchitecture.cpp",
		"/Users/manu/git/monee-ubu/include/ext/BehaviorControlArchitectures/PerceptronBehaviorControlArchitecture.h",
		"/Users/manu/git/monee-ubu/src/ext/Utils/NeuralController.cpp",
		"/Users/manu/git/monee-ubu/include/contrib/LioLib/lioneuralnet/neuralnets/MultiLayeredPerceptron.h",
		"/Users/manu/git/monee-ubu/prj/SimpleShells/include/SimpleShellsAgentWorldModel.h",
		"/Users/manu/git/monee-ubu/src/core/RobotAgentWorldModel.cpp",
		"/Users/manu/git/monee-ubu/prj/SimpleShells/include/SimpleShellsWorldObserver.h",
		"/Users/manu/git/monee-ubu/prj/SimpleShells/include/SimpleShellsAgentObserver.h",
		"/Users/manu/git/monee-ubu/include/ext/World/Puck.h",
		"/Users/manu/git/monee-ubu/include/contrib/LioLib/liogenetics/genetics/definitions.h",
		"/Users/manu/git/monee-ubu/include/contrib/LioLib/liobehaviorlib/src/WallAvoidanceBehavior.cpp",
		"/Users/manu/git/monee-ubu/include/contrib/LioLib/liobehaviorlib/behaviors/WallAvoidanceBehavior.h",
		"/Users/manu/Documents/bp/roborobo3/roborobo3/config/template_boids.properties",
		"/Users/manu/Documents/bp/roborobo3/roborobo3/config/test.properties",
		"/Users/manu/Documents/bp/roborobo3/roborobo3/config/template_wander_smallrobots.properties",
		"/Users/manu/Documents/bp/roborobo3/roborobo3/config/template_wander_bigrobots.properties",
		"/Users/manu/Documents/bp/roborobo3/roborobo3/config/template_vanillaEE.properties",
		"/Users/manu/Documents/bp/roborobo3/roborobo3/config/template_randomwalk.properties",
		"/Users/manu/Documents/bp/roborobo3/roborobo3/config/template_medea.properties",
		"/Users/manu/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/manu/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/manu/Documents/bp/monee-ubu",
		"/Users/manu/git/monee-ubu/scripts/monee.sh",
		"/Users/manu/git/monee/testfile",
		"/Users/manu/Desktop/monee/config/test.properties",
		"/Users/manu/Downloads/monee-master/src/ext/RangeSensor.cpp",
		"/Users/manu/Downloads/monee-master/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp",
		"/Users/manu/Downloads/monee-master/include/ext/World/PuckGen.h",
		"/Users/manu/git/monee/prj/SimpleShells/src/SimpleShellsAgentWorldModel.cpp",
		"/Users/manu/git/monee/src/core/RobotAgent.cpp",
		"/Users/manu/git/monee/src/core/RobotAgentWorldInterface.cpp",
		"/Users/manu/Documents/bp/roborobo2/include/ext/Config/ConfigurationLoader.h",
		"/Users/manu/Documents/bp/monee",
		"/Users/manu/git/monee/prj/SimpleShells/include/SimpleShellsAgentWorldModel.h",
		"/Users/manu/git/monee/include/ext/World/Puck.h",
		"/Users/manu/git/monee/include/core/World/World.h",
		"/Users/manu/git/monee/config/default.properties",
		"/Users/manu/git/monee/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp",
		"/Users/manu/git/monee/src/core/World.cpp",
		"/Users/manu/git/monee/include/ext/World/PuckGen.h",
		"/Users/manu/git/monee/config/helloworld2.properties",
		"/Users/manu/git/monee/prj/SimpleShells/include/SimpleShellsControlArchitecture.h",
		"/Users/manu/git/monee/src/core/roborobo.cpp",
		"/Users/manu/git/monee/include/contrib/LioLib/liogenetics/genetics/Evolver.h",
		"/Users/manu/git/monee/prj/SimpleShells/src/SimpleShellsWorldObserver.cpp",
		"/Users/manu/git/monee/src/contrib/Properties.cpp",
		"/Users/manu/Documents/bp/monee/Makefile",
		"/Users/manu/Documents/bp/monee/prj/SimpleShells/include/SimpleShellsAgentWorldModel.h",
		"/Users/manu/Documents/bp/monee/config/default.properties",
		"/Users/manu/Documents/bp/monee/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp",
		"/Users/manu/Documents/bp/monee/config/Panmixia.properties",
		"/Users/manu/Documents/bp/monee/src/core/roborobo.cpp",
		"/Users/manu/Documents/bp/monee/src/core/World.cpp",
		"/Users/manu/Documents/bp/monee/src/core/RobotAgent.cpp",
		"/Users/manu/Documents/bp/monee/include/core/WorldModels/RobotAgentWorldModel.h",
		"/Users/manu/Documents/bp/monee/src/core/Agent.cpp",
		"/Users/manu/Documents/bp/monee/src/core/InspectorAgent.cpp",
		"/Users/manu/Documents/bp/monee/prj/SimpleShells/src/SimpleShellsAgentWorldModel.cpp",
		"/Users/manu/Documents/bp/monee/src/contrib/Organism.cpp",
		"/Users/manu/Documents/bp/monee/src/contrib/Properties.cpp",
		"/Users/manu/Documents/bp/monee/src/contrib/newscast/NewscastInstance.cpp",
		"/Users/manu/Documents/bp/monee/src/ext/Utils/NeuralController.cpp",
		"/Users/manu/Documents/bp/monee/src/ext/Utils/Util.cpp",
		"/Users/manu/Documents/bp/monee/roborobo",
		"/Users/manu/Documents/bp/monee/include/core/RoboroboMain/roborobo.h",
		"/Users/manu/Documents/bp/monee/include/contrib/LioLib/liogenetics/genetics/Genome.h",
		"/Users/manu/Documents/bp/monee/include/contrib/LioLib/liogenetics/genetics/TournamentSelection.h",
		"/Users/manu/Documents/bp/monee/config/bar",
		"/Users/manu/Documents/bp/monee/src/core/ExtendedProperties.cpp",
		"/Users/manu/Documents/bp/monee/include/core/Utilities/ExtendedProperties.h",
		"/Users/manu/Documents/bp/monee/src/core/SDL_gfxPrimitivesExtra.cpp",
		"/Users/manu/Documents/bp/monee/config/Panmixia100.properties",
		"/Users/manu/Documents/bp/monee/config/test.properties",
		"/Users/manu/Documents/bp/monee/config/test.prop",
		"/Users/manu/Documents/bp/monee/include/contrib/LioLib/liogenetics/src/CollectivePatrolling.cpp"
	],
	"find":
	{
		"height": 54.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"/prj/.*",
			"/prj",
			"",
			"prj/",
			"",
			"prj/*",
			"",
			"*.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"_agentId",
			"step()",
			"step",
			"gMaxIt",
			"_specialisation",
			"_energyPuckId",
			"energyPuckId",
			"puck",
			"Genome",
			"selectWeight",
			"winner",
			"selectWeighted",
			"convertFromString",
			"loadSimSensorCSV",
			"reset",
			"simSensorResults",
			"SimpleShellsControlArchitecture",
			"simGenomeBehaviour",
			"std::cout",
			"updateGenomes",
			"advance",
			"enum",
			"std::cout",
			"test",
			"simGenomeBehaviour",
			"std::cout",
			" \"",
			"nov",
			"reset",
			"gather",
			"select",
			"_genePool",
			"assignFitness",
			"stdlib",
			"getSpecDeg",
			"reset",
			"_wm",
			"reset",
			"ACTION_ACTIVATE",
			"reset",
			"nob",
			"reset",
			"_lastYPos",
			"NOV",
			"_sensorCount",
			"sim",
			"simSensor",
			"sim",
			"NOV",
			"gPuckColors",
			"sensor",
			"_sensorCount",
			"nov",
			"18979875498798",
			"== 1",
			"gcc",
			"tuple",
			"sample",
			"string",
			"NOV",
			"struct Genome",
			"initWorld",
			"World.h",
			"struct Genome",
			"SimpleShellsControlArchitecture",
			"_age",
			"_simBehavior",
			"_behavior",
			"assignFitness",
			"struct Genome",
			"_age",
			"gSensorRange",
			"RangeSensor",
			"maxSensorDistance",
			"_sensorRay.maxRange",
			"_sensorRay",
			"maxSensorDistance",
			"maxRange",
			"ob",
			"obstac",
			"return 5;",
			"batch",
			"mode",
			"batch",
			"_desiredRotationalVelocity",
			"std::cout",
			"dumpGenePoolStats",
			"mutate",
			"agent",
			"_agentId",
			"agent",
			"RobotAgentWorldModel",
			"agent",
			"updateGenomes",
			"gatherGenomes",
			"agents",
			"listAgents",
			"SimpleShellsControlArchitecture",
			"_behavior",
			"make_BehaviorControlArchitecture",
			"_behavior",
			"getBehavior",
			"commdist",
			"gMaxCommDistSquared",
			"_nearbyGenomes",
			"gatherGenomes",
			"transmit",
			"fitness",
			"_wm",
			"math",
			"mutate",
			"parameters",
			"getNormPuckRange",
			"parameters",
			"checkAndGetPropertyValue",
			"trans += 1.0 * parameters[geneToUse++];\n\trotor += 1.0 * parameters[geneToUse++];\n",
			"hidden",
			"_hiddenNeuronCount",
			"choose_parent_species",
			"maze_novelty_map",
			"replace",
			"evaluate_population",
			"add_to_novelty_archive",
			"threshold",
			"novelty_threshold",
			"add_to_novelty_archive",
			"evaluate_population",
			"generation"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"__sincos"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 121222,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										145,
										154
									],
									[
										267,
										276
									],
									[
										331,
										340
									],
									[
										383,
										392
									],
									[
										605,
										610
									],
									[
										731,
										736
									],
									[
										783,
										788
									],
									[
										905,
										910
									],
									[
										962,
										967
									],
									[
										1022,
										1027
									],
									[
										1068,
										1073
									],
									[
										1227,
										1232
									],
									[
										1245,
										1250
									],
									[
										1267,
										1272
									],
									[
										1288,
										1293
									],
									[
										1316,
										1321
									],
									[
										1393,
										1398
									],
									[
										1561,
										1566
									],
									[
										1672,
										1677
									],
									[
										1690,
										1695
									],
									[
										1893,
										1898
									],
									[
										1937,
										1942
									],
									[
										2003,
										2008
									],
									[
										2077,
										2082
									],
									[
										2237,
										2242
									],
									[
										2282,
										2287
									],
									[
										2324,
										2329
									],
									[
										2359,
										2364
									],
									[
										2465,
										2470
									],
									[
										2561,
										2566
									],
									[
										2648,
										2653
									],
									[
										2670,
										2675
									],
									[
										2727,
										2732
									],
									[
										2860,
										2865
									],
									[
										2966,
										2971
									],
									[
										3063,
										3068
									],
									[
										3165,
										3170
									],
									[
										3255,
										3260
									],
									[
										3350,
										3355
									],
									[
										3491,
										3496
									],
									[
										3603,
										3608
									],
									[
										3719,
										3724
									],
									[
										3812,
										3817
									],
									[
										3915,
										3920
									],
									[
										4023,
										4028
									],
									[
										4139,
										4144
									],
									[
										4254,
										4259
									],
									[
										4374,
										4379
									],
									[
										4482,
										4487
									],
									[
										4613,
										4618
									],
									[
										4747,
										4752
									],
									[
										4908,
										4913
									],
									[
										4931,
										4936
									],
									[
										4962,
										4967
									],
									[
										5093,
										5098
									],
									[
										5180,
										5185
									],
									[
										5276,
										5281
									],
									[
										5352,
										5357
									],
									[
										5389,
										5394
									],
									[
										5473,
										5478
									],
									[
										5593,
										5598
									],
									[
										5670,
										5675
									],
									[
										5725,
										5730
									],
									[
										5789,
										5794
									],
									[
										5828,
										5833
									],
									[
										5854,
										5859
									],
									[
										5893,
										5898
									],
									[
										5971,
										5976
									],
									[
										6004,
										6009
									],
									[
										6132,
										6137
									],
									[
										6322,
										6327
									],
									[
										6418,
										6423
									],
									[
										6446,
										6451
									],
									[
										6523,
										6528
									],
									[
										6565,
										6570
									],
									[
										6658,
										6663
									],
									[
										6691,
										6696
									],
									[
										6719,
										6724
									],
									[
										6754,
										6759
									],
									[
										6782,
										6787
									],
									[
										6877,
										6882
									],
									[
										7018,
										7023
									],
									[
										7035,
										7040
									],
									[
										7145,
										7150
									],
									[
										7167,
										7172
									],
									[
										7231,
										7236
									],
									[
										7258,
										7263
									],
									[
										7364,
										7369
									],
									[
										7547,
										7562
									],
									[
										7738,
										7753
									],
									[
										7858,
										7873
									],
									[
										8046,
										8061
									],
									[
										8237,
										8252
									],
									[
										8357,
										8372
									],
									[
										8638,
										8641
									],
									[
										8740,
										8743
									],
									[
										8880,
										8883
									],
									[
										8946,
										8949
									],
									[
										9063,
										9066
									],
									[
										9115,
										9118
									],
									[
										9249,
										9252
									],
									[
										9407,
										9410
									],
									[
										9483,
										9486
									],
									[
										9520,
										9523
									],
									[
										9741,
										9744
									],
									[
										9894,
										9897
									],
									[
										10022,
										10025
									],
									[
										10058,
										10061
									],
									[
										10198,
										10201
									],
									[
										10326,
										10329
									],
									[
										10390,
										10393
									],
									[
										10532,
										10535
									],
									[
										10601,
										10604
									],
									[
										10774,
										10777
									],
									[
										10788,
										10791
									],
									[
										10825,
										10828
									],
									[
										11015,
										11018
									],
									[
										11054,
										11057
									],
									[
										11070,
										11073
									],
									[
										11107,
										11110
									],
									[
										11141,
										11144
									],
									[
										11313,
										11316
									],
									[
										11373,
										11376
									],
									[
										11419,
										11422
									],
									[
										11472,
										11475
									],
									[
										11532,
										11535
									],
									[
										11583,
										11586
									],
									[
										11644,
										11647
									],
									[
										11683,
										11686
									],
									[
										11782,
										11785
									],
									[
										11874,
										11877
									],
									[
										11896,
										11899
									],
									[
										11979,
										11982
									],
									[
										12014,
										12017
									],
									[
										12038,
										12041
									],
									[
										12084,
										12087
									],
									[
										12108,
										12111
									],
									[
										12154,
										12157
									],
									[
										12177,
										12180
									],
									[
										12224,
										12227
									],
									[
										12247,
										12250
									],
									[
										12340,
										12343
									],
									[
										12392,
										12395
									],
									[
										12436,
										12439
									],
									[
										12491,
										12494
									],
									[
										12561,
										12564
									],
									[
										12598,
										12601
									],
									[
										12650,
										12653
									],
									[
										12665,
										12668
									],
									[
										12735,
										12738
									],
									[
										12842,
										12845
									],
									[
										12929,
										12932
									],
									[
										12992,
										12995
									],
									[
										13073,
										13076
									],
									[
										13136,
										13139
									],
									[
										13182,
										13185
									],
									[
										13224,
										13227
									],
									[
										13308,
										13311
									],
									[
										13407,
										13410
									],
									[
										13509,
										13512
									],
									[
										13608,
										13611
									],
									[
										13695,
										13698
									],
									[
										13758,
										13761
									],
									[
										13839,
										13842
									],
									[
										13927,
										13930
									],
									[
										14026,
										14029
									],
									[
										14128,
										14131
									],
									[
										14227,
										14230
									],
									[
										14314,
										14317
									],
									[
										14377,
										14380
									],
									[
										14458,
										14461
									],
									[
										14510,
										14513
									],
									[
										14577,
										14580
									],
									[
										14606,
										14609
									],
									[
										14670,
										14673
									],
									[
										14734,
										14737
									],
									[
										14820,
										14823
									],
									[
										14910,
										14913
									],
									[
										15009,
										15012
									],
									[
										15111,
										15114
									],
									[
										15210,
										15213
									],
									[
										15297,
										15300
									],
									[
										15338,
										15341
									],
									[
										15382,
										15385
									],
									[
										15417,
										15420
									],
									[
										15441,
										15444
									],
									[
										15553,
										15556
									],
									[
										15578,
										15581
									],
									[
										15615,
										15618
									],
									[
										15653,
										15656
									],
									[
										15734,
										15737
									],
									[
										15788,
										15791
									],
									[
										15814,
										15817
									],
									[
										15840,
										15843
									],
									[
										15881,
										15884
									],
									[
										15934,
										15937
									],
									[
										15960,
										15963
									],
									[
										15986,
										15989
									],
									[
										16033,
										16036
									],
									[
										16080,
										16083
									],
									[
										16118,
										16121
									],
									[
										16170,
										16173
									],
									[
										16200,
										16203
									],
									[
										16280,
										16283
									],
									[
										16344,
										16347
									],
									[
										16396,
										16399
									],
									[
										16448,
										16451
									],
									[
										16567,
										16570
									],
									[
										16593,
										16596
									],
									[
										16796,
										16799
									],
									[
										16836,
										16839
									],
									[
										16962,
										16965
									],
									[
										16976,
										16979
									],
									[
										17014,
										17017
									],
									[
										17180,
										17183
									],
									[
										17195,
										17198
									],
									[
										17202,
										17205
									],
									[
										17271,
										17274
									],
									[
										17402,
										17405
									],
									[
										17433,
										17436
									],
									[
										17472,
										17475
									],
									[
										17506,
										17509
									],
									[
										17535,
										17538
									],
									[
										17562,
										17565
									],
									[
										17620,
										17623
									],
									[
										17651,
										17654
									],
									[
										17679,
										17682
									],
									[
										17705,
										17708
									],
									[
										17846,
										17849
									],
									[
										17881,
										17884
									],
									[
										17916,
										17919
									],
									[
										17951,
										17954
									],
									[
										17986,
										17989
									],
									[
										18028,
										18031
									],
									[
										18077,
										18080
									],
									[
										18198,
										18201
									],
									[
										18307,
										18310
									],
									[
										18448,
										18451
									],
									[
										18495,
										18498
									],
									[
										18587,
										18590
									],
									[
										18689,
										18692
									],
									[
										18731,
										18734
									],
									[
										18744,
										18747
									],
									[
										18781,
										18784
									],
									[
										18867,
										18870
									],
									[
										19057,
										19060
									],
									[
										19186,
										19189
									],
									[
										19213,
										19216
									],
									[
										19240,
										19243
									],
									[
										19276,
										19279
									],
									[
										19337,
										19340
									],
									[
										19479,
										19482
									],
									[
										19546,
										19549
									],
									[
										19609,
										19612
									],
									[
										19653,
										19656
									],
									[
										19698,
										19701
									],
									[
										19743,
										19746
									],
									[
										19839,
										19842
									],
									[
										19947,
										19950
									],
									[
										19991,
										19994
									],
									[
										20056,
										20059
									],
									[
										20142,
										20145
									],
									[
										20201,
										20204
									],
									[
										20249,
										20252
									],
									[
										20329,
										20332
									],
									[
										20365,
										20368
									],
									[
										20487,
										20490
									],
									[
										20540,
										20543
									],
									[
										20597,
										20600
									],
									[
										20647,
										20650
									],
									[
										20688,
										20691
									],
									[
										20771,
										20774
									],
									[
										20815,
										20818
									],
									[
										20902,
										20905
									],
									[
										20926,
										20929
									],
									[
										20983,
										20986
									],
									[
										21034,
										21037
									],
									[
										21101,
										21104
									],
									[
										21172,
										21175
									],
									[
										21241,
										21244
									],
									[
										21309,
										21312
									],
									[
										21368,
										21371
									],
									[
										21415,
										21418
									],
									[
										21465,
										21468
									],
									[
										21512,
										21515
									],
									[
										21561,
										21564
									],
									[
										21609,
										21612
									],
									[
										21653,
										21656
									],
									[
										21699,
										21702
									],
									[
										21782,
										21785
									],
									[
										21888,
										21891
									],
									[
										21921,
										21924
									],
									[
										21965,
										21968
									],
									[
										22000,
										22003
									],
									[
										22062,
										22065
									],
									[
										22096,
										22099
									],
									[
										22247,
										22250
									],
									[
										22281,
										22284
									],
									[
										22336,
										22339
									],
									[
										22381,
										22384
									],
									[
										22415,
										22418
									],
									[
										22460,
										22463
									],
									[
										22521,
										22524
									],
									[
										22566,
										22569
									],
									[
										22600,
										22603
									],
									[
										22645,
										22648
									],
									[
										22698,
										22701
									],
									[
										22765,
										22768
									],
									[
										22836,
										22839
									],
									[
										22905,
										22908
									],
									[
										22975,
										22978
									],
									[
										23027,
										23030
									],
									[
										23062,
										23065
									],
									[
										23103,
										23106
									],
									[
										23136,
										23139
									],
									[
										23179,
										23182
									],
									[
										23212,
										23215
									],
									[
										23256,
										23259
									],
									[
										23309,
										23312
									],
									[
										23345,
										23348
									],
									[
										23387,
										23390
									],
									[
										23420,
										23423
									],
									[
										23464,
										23467
									],
									[
										23498,
										23501
									],
									[
										23591,
										23594
									],
									[
										23735,
										23738
									],
									[
										23767,
										23770
									],
									[
										23806,
										23809
									],
									[
										23849,
										23852
									],
									[
										23916,
										23919
									],
									[
										23983,
										23986
									],
									[
										24036,
										24039
									],
									[
										24072,
										24075
									],
									[
										24123,
										24126
									],
									[
										24148,
										24151
									],
									[
										24181,
										24184
									],
									[
										24232,
										24235
									],
									[
										24286,
										24289
									],
									[
										24338,
										24341
									],
									[
										24386,
										24389
									],
									[
										24429,
										24432
									],
									[
										24480,
										24483
									],
									[
										24525,
										24528
									],
									[
										24559,
										24562
									],
									[
										24609,
										24612
									],
									[
										24644,
										24647
									],
									[
										24691,
										24694
									],
									[
										24726,
										24729
									],
									[
										24776,
										24779
									],
									[
										24801,
										24804
									],
									[
										24830,
										24833
									],
									[
										24876,
										24879
									],
									[
										24950,
										24953
									],
									[
										24996,
										24999
									],
									[
										25029,
										25032
									],
									[
										25073,
										25076
									],
									[
										25107,
										25110
									],
									[
										25153,
										25156
									],
									[
										25198,
										25201
									],
									[
										25231,
										25234
									],
									[
										25273,
										25276
									],
									[
										25306,
										25309
									],
									[
										25345,
										25348
									],
									[
										25515,
										25518
									],
									[
										25588,
										25591
									],
									[
										25623,
										25626
									],
									[
										25653,
										25656
									],
									[
										25666,
										25669
									],
									[
										25707,
										25710
									],
									[
										25764,
										25767
									],
									[
										25786,
										25789
									],
									[
										25834,
										25837
									],
									[
										25856,
										25859
									],
									[
										25902,
										25905
									],
									[
										25953,
										25956
									],
									[
										25976,
										25979
									],
									[
										26044,
										26047
									],
									[
										26064,
										26067
									],
									[
										26083,
										26086
									],
									[
										26096,
										26099
									],
									[
										26159,
										26162
									],
									[
										26200,
										26203
									],
									[
										26222,
										26225
									],
									[
										26276,
										26279
									],
									[
										26298,
										26301
									],
									[
										26373,
										26376
									],
									[
										26386,
										26389
									],
									[
										26408,
										26411
									],
									[
										26519,
										26522
									],
									[
										26552,
										26555
									],
									[
										26594,
										26597
									],
									[
										26615,
										26618
									],
									[
										26655,
										26658
									],
									[
										26676,
										26679
									],
									[
										26725,
										26728
									],
									[
										26771,
										26774
									],
									[
										26856,
										26859
									],
									[
										26901,
										26904
									],
									[
										26950,
										26953
									],
									[
										26982,
										26985
									],
									[
										27092,
										27095
									],
									[
										27140,
										27143
									],
									[
										27195,
										27198
									],
									[
										27227,
										27230
									],
									[
										27296,
										27299
									],
									[
										27328,
										27331
									],
									[
										27401,
										27404
									],
									[
										27444,
										27447
									],
									[
										27531,
										27534
									],
									[
										27574,
										27577
									],
									[
										27633,
										27636
									],
									[
										27719,
										27722
									],
									[
										27768,
										27771
									],
									[
										27782,
										27785
									],
									[
										27808,
										27811
									],
									[
										27830,
										27833
									],
									[
										27900,
										27903
									],
									[
										27914,
										27917
									],
									[
										27940,
										27943
									],
									[
										27962,
										27965
									],
									[
										28032,
										28035
									],
									[
										28046,
										28049
									],
									[
										28072,
										28075
									],
									[
										28094,
										28097
									],
									[
										28164,
										28167
									],
									[
										28178,
										28181
									],
									[
										28204,
										28207
									],
									[
										28226,
										28229
									],
									[
										28355,
										28358
									],
									[
										28482,
										28485
									],
									[
										28504,
										28507
									],
									[
										28645,
										28648
									],
									[
										28887,
										28890
									],
									[
										29121,
										29124
									],
									[
										29292,
										29295
									],
									[
										29319,
										29322
									],
									[
										29353,
										29356
									],
									[
										29376,
										29379
									],
									[
										29413,
										29416
									],
									[
										29449,
										29452
									],
									[
										29480,
										29483
									],
									[
										29559,
										29562
									],
									[
										29631,
										29634
									],
									[
										29681,
										29684
									],
									[
										29727,
										29730
									],
									[
										29800,
										29803
									],
									[
										29848,
										29851
									],
									[
										29895,
										29898
									],
									[
										29929,
										29932
									],
									[
										29964,
										29967
									],
									[
										29999,
										30002
									],
									[
										30064,
										30067
									],
									[
										30132,
										30135
									],
									[
										30201,
										30204
									],
									[
										30264,
										30267
									],
									[
										30385,
										30388
									],
									[
										30449,
										30452
									],
									[
										30610,
										30613
									],
									[
										30642,
										30645
									],
									[
										30721,
										30724
									],
									[
										30790,
										30793
									],
									[
										30827,
										30830
									],
									[
										30855,
										30858
									],
									[
										30912,
										30915
									],
									[
										31068,
										31071
									],
									[
										31141,
										31144
									],
									[
										31179,
										31182
									],
									[
										31203,
										31206
									],
									[
										31374,
										31377
									],
									[
										31389,
										31392
									],
									[
										31423,
										31426
									],
									[
										31464,
										31467
									],
									[
										31499,
										31502
									],
									[
										31547,
										31550
									],
									[
										31596,
										31599
									],
									[
										31723,
										31726
									],
									[
										31776,
										31779
									],
									[
										31810,
										31813
									],
									[
										31865,
										31868
									],
									[
										31917,
										31920
									],
									[
										31951,
										31954
									],
									[
										32013,
										32016
									],
									[
										32092,
										32095
									],
									[
										32146,
										32149
									],
									[
										32196,
										32199
									],
									[
										32232,
										32235
									],
									[
										32318,
										32321
									],
									[
										32341,
										32344
									],
									[
										32379,
										32382
									],
									[
										32439,
										32442
									],
									[
										32465,
										32468
									],
									[
										32496,
										32499
									],
									[
										32539,
										32542
									],
									[
										32601,
										32604
									],
									[
										32644,
										32647
									],
									[
										32690,
										32693
									],
									[
										32716,
										32719
									],
									[
										32811,
										32814
									],
									[
										32865,
										32868
									],
									[
										33091,
										33094
									],
									[
										33105,
										33108
									],
									[
										33143,
										33146
									],
									[
										33158,
										33161
									],
									[
										33206,
										33209
									],
									[
										33233,
										33236
									],
									[
										33301,
										33304
									],
									[
										33346,
										33349
									],
									[
										33393,
										33396
									],
									[
										33480,
										33483
									],
									[
										33562,
										33565
									],
									[
										33607,
										33610
									],
									[
										33675,
										33678
									],
									[
										33710,
										33713
									],
									[
										33762,
										33765
									],
									[
										33803,
										33806
									],
									[
										33859,
										33862
									],
									[
										33899,
										33902
									],
									[
										33963,
										33966
									],
									[
										34029,
										34032
									],
									[
										34068,
										34071
									],
									[
										34110,
										34113
									],
									[
										34149,
										34152
									],
									[
										34191,
										34194
									],
									[
										34225,
										34228
									],
									[
										34291,
										34294
									],
									[
										34325,
										34328
									],
									[
										34555,
										34558
									],
									[
										34575,
										34578
									],
									[
										34606,
										34609
									],
									[
										34657,
										34660
									],
									[
										34741,
										34744
									],
									[
										34930,
										34933
									],
									[
										34994,
										34997
									],
									[
										35057,
										35060
									],
									[
										35091,
										35094
									],
									[
										35132,
										35135
									],
									[
										35167,
										35170
									],
									[
										35237,
										35240
									],
									[
										35265,
										35268
									],
									[
										35327,
										35330
									],
									[
										35376,
										35379
									],
									[
										35503,
										35506
									],
									[
										35556,
										35559
									],
									[
										35590,
										35593
									],
									[
										35645,
										35648
									],
									[
										35697,
										35700
									],
									[
										35731,
										35734
									],
									[
										35945,
										35948
									],
									[
										35984,
										35987
									],
									[
										35999,
										36002
									],
									[
										36098,
										36101
									],
									[
										36143,
										36146
									],
									[
										36286,
										36289
									],
									[
										36380,
										36383
									],
									[
										36428,
										36431
									],
									[
										36482,
										36485
									],
									[
										36515,
										36518
									],
									[
										36731,
										36734
									],
									[
										36774,
										36777
									],
									[
										36815,
										36818
									],
									[
										36831,
										36834
									],
									[
										36899,
										36902
									],
									[
										36919,
										36922
									],
									[
										36986,
										36989
									],
									[
										37008,
										37011
									],
									[
										37030,
										37033
									],
									[
										37052,
										37055
									],
									[
										37074,
										37077
									],
									[
										37096,
										37099
									],
									[
										37130,
										37133
									],
									[
										37184,
										37187
									],
									[
										37206,
										37209
									],
									[
										37228,
										37231
									],
									[
										37280,
										37283
									],
									[
										37335,
										37338
									],
									[
										37387,
										37390
									],
									[
										37440,
										37443
									],
									[
										37492,
										37495
									],
									[
										37541,
										37544
									],
									[
										37648,
										37651
									],
									[
										37686,
										37689
									],
									[
										37754,
										37757
									],
									[
										37917,
										37920
									],
									[
										37937,
										37940
									],
									[
										37944,
										37947
									],
									[
										38040,
										38043
									],
									[
										38094,
										38097
									],
									[
										38127,
										38130
									],
									[
										38297,
										38300
									],
									[
										38476,
										38482
									],
									[
										38601,
										38607
									],
									[
										38715,
										38721
									],
									[
										38833,
										38839
									],
									[
										38921,
										38927
									],
									[
										39024,
										39030
									],
									[
										39109,
										39115
									],
									[
										39195,
										39201
									],
									[
										39285,
										39291
									],
									[
										39418,
										39424
									],
									[
										39663,
										39676
									],
									[
										39843,
										39856
									],
									[
										39898,
										39911
									],
									[
										40115,
										40124
									],
									[
										40235,
										40244
									],
									[
										40266,
										40275
									],
									[
										40323,
										40332
									],
									[
										40353,
										40362
									],
									[
										40474,
										40483
									],
									[
										40546,
										40555
									],
									[
										40590,
										40599
									],
									[
										40645,
										40654
									],
									[
										40715,
										40724
									],
									[
										40752,
										40761
									],
									[
										40853,
										40862
									],
									[
										40891,
										40900
									],
									[
										40926,
										40935
									],
									[
										40950,
										40959
									],
									[
										41062,
										41071
									],
									[
										41321,
										41339
									],
									[
										41443,
										41461
									],
									[
										41510,
										41528
									],
									[
										41543,
										41561
									],
									[
										41679,
										41683
									],
									[
										41691,
										41695
									],
									[
										41714,
										41718
									],
									[
										41752,
										41756
									],
									[
										41796,
										41800
									],
									[
										41926,
										41930
									],
									[
										42040,
										42044
									],
									[
										42179,
										42183
									],
									[
										42332,
										42336
									],
									[
										42408,
										42412
									],
									[
										42440,
										42444
									],
									[
										42468,
										42472
									],
									[
										42570,
										42574
									],
									[
										42603,
										42607
									],
									[
										42710,
										42714
									],
									[
										42755,
										42759
									],
									[
										43072,
										43079
									],
									[
										43239,
										43246
									],
									[
										43266,
										43273
									],
									[
										43422,
										43429
									],
									[
										43538,
										43545
									],
									[
										43564,
										43571
									],
									[
										43590,
										43597
									],
									[
										43616,
										43623
									],
									[
										43646,
										43653
									],
									[
										43748,
										43755
									],
									[
										43770,
										43777
									],
									[
										43869,
										43876
									],
									[
										43920,
										43927
									],
									[
										43951,
										43958
									],
									[
										43972,
										43979
									],
									[
										44052,
										44059
									],
									[
										44109,
										44116
									],
									[
										44369,
										44387
									],
									[
										44491,
										44509
									],
									[
										44558,
										44576
									],
									[
										44591,
										44609
									],
									[
										44859,
										44890
									],
									[
										44908,
										44939
									],
									[
										44955,
										44986
									],
									[
										45035,
										45066
									],
									[
										45106,
										45137
									],
									[
										45268,
										45299
									],
									[
										45346,
										45377
									],
									[
										45434,
										45465
									],
									[
										45467,
										45498
									],
									[
										45577,
										45608
									],
									[
										45611,
										45642
									],
									[
										45659,
										45690
									],
									[
										45714,
										45745
									],
									[
										45770,
										45801
									],
									[
										45835,
										45866
									],
									[
										45927,
										45958
									],
									[
										46040,
										46071
									],
									[
										46098,
										46129
									],
									[
										46166,
										46197
									],
									[
										46224,
										46255
									],
									[
										46293,
										46324
									],
									[
										46356,
										46387
									],
									[
										46421,
										46452
									],
									[
										46488,
										46519
									],
									[
										46556,
										46587
									],
									[
										46650,
										46681
									],
									[
										46756,
										46787
									],
									[
										46812,
										46843
									],
									[
										46968,
										46999
									],
									[
										47022,
										47053
									],
									[
										47243,
										47259
									],
									[
										47372,
										47388
									],
									[
										47435,
										47451
									],
									[
										47480,
										47496
									],
									[
										47529,
										47545
									],
									[
										47605,
										47621
									],
									[
										47658,
										47674
									],
									[
										47725,
										47741
									],
									[
										47749,
										47765
									],
									[
										47810,
										47826
									],
									[
										47876,
										47892
									],
									[
										48113,
										48130
									],
									[
										48180,
										48197
									],
									[
										48255,
										48272
									],
									[
										48353,
										48370
									],
									[
										48443,
										48460
									],
									[
										48629,
										48646
									],
									[
										48661,
										48678
									],
									[
										48759,
										48776
									],
									[
										48865,
										48882
									],
									[
										48981,
										48998
									],
									[
										49097,
										49114
									],
									[
										49195,
										49212
									],
									[
										49311,
										49328
									],
									[
										49417,
										49434
									],
									[
										49521,
										49538
									],
									[
										49627,
										49644
									],
									[
										49733,
										49750
									],
									[
										49853,
										49870
									],
									[
										49983,
										50000
									],
									[
										50097,
										50114
									],
									[
										50201,
										50218
									],
									[
										50303,
										50320
									],
									[
										50389,
										50406
									],
									[
										50485,
										50502
									],
									[
										50589,
										50606
									],
									[
										50685,
										50702
									],
									[
										50785,
										50802
									],
									[
										50883,
										50900
									],
									[
										50981,
										50998
									],
									[
										51079,
										51096
									],
									[
										51196,
										51213
									],
									[
										51303,
										51320
									],
									[
										51416,
										51433
									],
									[
										51527,
										51544
									],
									[
										51662,
										51679
									],
									[
										51765,
										51782
									],
									[
										51888,
										51905
									],
									[
										51995,
										52012
									],
									[
										52103,
										52120
									],
									[
										52203,
										52220
									],
									[
										52299,
										52316
									],
									[
										52453,
										52470
									],
									[
										52527,
										52544
									],
									[
										52601,
										52618
									],
									[
										52956,
										52962
									],
									[
										52994,
										53000
									],
									[
										53042,
										53048
									],
									[
										53090,
										53096
									],
									[
										53138,
										53144
									],
									[
										53186,
										53192
									],
									[
										53248,
										53254
									],
									[
										53418,
										53424
									],
									[
										53479,
										53485
									],
									[
										53588,
										53594
									],
									[
										53595,
										53601
									],
									[
										53617,
										53623
									],
									[
										53628,
										53634
									],
									[
										53690,
										53696
									],
									[
										53792,
										53798
									],
									[
										53828,
										53834
									],
									[
										53876,
										53882
									],
									[
										53988,
										53994
									],
									[
										54048,
										54054
									],
									[
										54166,
										54172
									],
									[
										54197,
										54203
									],
									[
										54223,
										54229
									],
									[
										54257,
										54263
									],
									[
										54337,
										54343
									],
									[
										54350,
										54356
									],
									[
										54435,
										54441
									],
									[
										54494,
										54500
									],
									[
										54511,
										54517
									],
									[
										54577,
										54583
									],
									[
										54649,
										54655
									],
									[
										54708,
										54714
									],
									[
										54798,
										54804
									],
									[
										54857,
										54863
									],
									[
										54930,
										54936
									],
									[
										55001,
										55007
									],
									[
										55054,
										55060
									],
									[
										55088,
										55094
									],
									[
										55163,
										55169
									],
									[
										55192,
										55198
									],
									[
										55274,
										55280
									],
									[
										55377,
										55383
									],
									[
										55401,
										55407
									],
									[
										55426,
										55432
									],
									[
										55472,
										55478
									],
									[
										55499,
										55505
									],
									[
										55537,
										55543
									],
									[
										55599,
										55605
									],
									[
										55635,
										55641
									],
									[
										55742,
										55748
									],
									[
										55772,
										55778
									],
									[
										55797,
										55803
									],
									[
										55854,
										55860
									],
									[
										56010,
										56016
									],
									[
										56032,
										56038
									],
									[
										56170,
										56176
									],
									[
										56258,
										56264
									],
									[
										56306,
										56312
									],
									[
										56321,
										56327
									],
									[
										56342,
										56348
									],
									[
										56421,
										56427
									],
									[
										56463,
										56469
									],
									[
										56518,
										56524
									],
									[
										56629,
										56635
									],
									[
										56688,
										56694
									],
									[
										56804,
										56810
									],
									[
										56862,
										56868
									],
									[
										56991,
										56997
									],
									[
										57054,
										57060
									],
									[
										57182,
										57188
									],
									[
										57223,
										57229
									],
									[
										57386,
										57392
									],
									[
										57455,
										57461
									],
									[
										57483,
										57489
									],
									[
										57572,
										57578
									],
									[
										57587,
										57593
									],
									[
										57715,
										57721
									],
									[
										57746,
										57752
									],
									[
										57875,
										57881
									],
									[
										57890,
										57896
									],
									[
										58013,
										58019
									],
									[
										58124,
										58130
									],
									[
										58237,
										58243
									],
									[
										58259,
										58265
									],
									[
										58366,
										58372
									],
									[
										58437,
										58443
									],
									[
										58473,
										58479
									],
									[
										58496,
										58502
									],
									[
										58526,
										58532
									],
									[
										58638,
										58644
									],
									[
										58660,
										58666
									],
									[
										58690,
										58696
									],
									[
										58816,
										58822
									],
									[
										58896,
										58902
									],
									[
										58946,
										58952
									],
									[
										59010,
										59016
									],
									[
										59076,
										59082
									],
									[
										59157,
										59163
									],
									[
										59312,
										59318
									],
									[
										59409,
										59415
									],
									[
										59444,
										59450
									],
									[
										59453,
										59459
									],
									[
										59488,
										59494
									],
									[
										59603,
										59609
									],
									[
										59746,
										59752
									],
									[
										59789,
										59795
									],
									[
										59818,
										59824
									],
									[
										59878,
										59884
									],
									[
										59914,
										59920
									],
									[
										60059,
										60065
									],
									[
										60215,
										60221
									],
									[
										60261,
										60267
									],
									[
										60281,
										60287
									],
									[
										60351,
										60357
									],
									[
										60367,
										60373
									],
									[
										60391,
										60397
									],
									[
										60405,
										60411
									],
									[
										60440,
										60446
									],
									[
										60491,
										60497
									],
									[
										60531,
										60537
									],
									[
										60551,
										60557
									],
									[
										60562,
										60568
									],
									[
										60587,
										60593
									],
									[
										60627,
										60633
									],
									[
										60697,
										60703
									],
									[
										60709,
										60715
									],
									[
										60827,
										60833
									],
									[
										60861,
										60867
									],
									[
										60884,
										60890
									],
									[
										60915,
										60921
									],
									[
										60944,
										60950
									],
									[
										60971,
										60977
									],
									[
										61027,
										61033
									],
									[
										61076,
										61082
									],
									[
										61105,
										61111
									],
									[
										61151,
										61157
									],
									[
										61295,
										61301
									],
									[
										61321,
										61327
									],
									[
										61362,
										61368
									],
									[
										61446,
										61452
									],
									[
										61487,
										61493
									],
									[
										61545,
										61551
									],
									[
										61661,
										61667
									],
									[
										61750,
										61756
									],
									[
										61842,
										61848
									],
									[
										61911,
										61917
									],
									[
										61974,
										61980
									],
									[
										62003,
										62009
									],
									[
										62037,
										62043
									],
									[
										62089,
										62095
									],
									[
										62128,
										62134
									],
									[
										62179,
										62185
									],
									[
										62230,
										62236
									],
									[
										62247,
										62253
									],
									[
										62374,
										62380
									],
									[
										62487,
										62493
									],
									[
										62543,
										62549
									],
									[
										62635,
										62641
									],
									[
										62697,
										62703
									],
									[
										62786,
										62792
									],
									[
										62832,
										62838
									],
									[
										62852,
										62858
									],
									[
										62880,
										62886
									],
									[
										62906,
										62912
									],
									[
										62948,
										62954
									],
									[
										62991,
										62997
									],
									[
										63011,
										63017
									],
									[
										63039,
										63045
									],
									[
										63065,
										63071
									],
									[
										63107,
										63113
									],
									[
										63171,
										63177
									],
									[
										63235,
										63241
									],
									[
										63263,
										63269
									],
									[
										63317,
										63323
									],
									[
										63370,
										63376
									],
									[
										63451,
										63457
									],
									[
										63471,
										63477
									],
									[
										63559,
										63565
									],
									[
										63615,
										63621
									],
									[
										63677,
										63683
									],
									[
										63722,
										63728
									],
									[
										63749,
										63755
									],
									[
										63764,
										63770
									],
									[
										63824,
										63830
									],
									[
										63874,
										63880
									],
									[
										63898,
										63904
									],
									[
										63927,
										63933
									],
									[
										63955,
										63961
									],
									[
										63982,
										63988
									],
									[
										63999,
										64005
									],
									[
										64021,
										64027
									],
									[
										64038,
										64044
									],
									[
										64058,
										64064
									],
									[
										64095,
										64101
									],
									[
										64139,
										64145
									],
									[
										64181,
										64187
									],
									[
										64225,
										64231
									],
									[
										64247,
										64253
									],
									[
										64320,
										64326
									],
									[
										64347,
										64353
									],
									[
										64409,
										64415
									],
									[
										64429,
										64435
									],
									[
										64507,
										64513
									],
									[
										64539,
										64545
									],
									[
										64605,
										64611
									],
									[
										64642,
										64648
									],
									[
										64721,
										64727
									],
									[
										64788,
										64794
									],
									[
										64857,
										64863
									],
									[
										64891,
										64897
									],
									[
										64940,
										64946
									],
									[
										65016,
										65022
									],
									[
										65114,
										65120
									],
									[
										65126,
										65132
									],
									[
										65160,
										65166
									],
									[
										65282,
										65288
									],
									[
										65350,
										65356
									],
									[
										65386,
										65392
									],
									[
										65434,
										65440
									],
									[
										65522,
										65528
									],
									[
										65556,
										65562
									],
									[
										65678,
										65684
									],
									[
										65746,
										65752
									],
									[
										65782,
										65788
									],
									[
										65809,
										65815
									],
									[
										65941,
										65947
									],
									[
										66009,
										66015
									],
									[
										66045,
										66051
									],
									[
										66080,
										66086
									],
									[
										66119,
										66125
									],
									[
										66183,
										66189
									],
									[
										66235,
										66241
									],
									[
										66292,
										66298
									],
									[
										66344,
										66350
									],
									[
										66463,
										66469
									],
									[
										66659,
										66665
									],
									[
										66706,
										66712
									],
									[
										66753,
										66759
									],
									[
										66800,
										66806
									],
									[
										66847,
										66853
									],
									[
										66930,
										66936
									],
									[
										66939,
										66945
									],
									[
										66967,
										66973
									],
									[
										67113,
										67119
									],
									[
										67201,
										67207
									],
									[
										67325,
										67331
									],
									[
										67449,
										67455
									],
									[
										67485,
										67491
									],
									[
										67541,
										67547
									],
									[
										67585,
										67591
									],
									[
										67710,
										67716
									],
									[
										67778,
										67784
									],
									[
										67899,
										67905
									],
									[
										68073,
										68085
									],
									[
										68155,
										68167
									],
									[
										68240,
										68252
									],
									[
										68319,
										68331
									],
									[
										68424,
										68436
									],
									[
										68527,
										68539
									],
									[
										68630,
										68642
									],
									[
										68733,
										68745
									],
									[
										68836,
										68848
									],
									[
										68939,
										68951
									],
									[
										69042,
										69054
									],
									[
										69145,
										69157
									],
									[
										69248,
										69260
									],
									[
										69351,
										69363
									],
									[
										69454,
										69466
									],
									[
										69557,
										69569
									],
									[
										69660,
										69672
									],
									[
										69763,
										69775
									],
									[
										69866,
										69878
									],
									[
										69969,
										69981
									],
									[
										70072,
										70084
									],
									[
										70175,
										70187
									],
									[
										70278,
										70290
									],
									[
										70381,
										70393
									],
									[
										70484,
										70496
									],
									[
										70587,
										70599
									],
									[
										70690,
										70702
									],
									[
										70793,
										70805
									],
									[
										70896,
										70908
									],
									[
										70999,
										71011
									],
									[
										71102,
										71114
									],
									[
										71205,
										71217
									],
									[
										71308,
										71320
									],
									[
										71411,
										71423
									],
									[
										71514,
										71526
									],
									[
										71617,
										71629
									],
									[
										71720,
										71732
									],
									[
										71823,
										71835
									],
									[
										71926,
										71938
									],
									[
										72029,
										72041
									],
									[
										72132,
										72144
									],
									[
										72235,
										72247
									],
									[
										72338,
										72350
									],
									[
										72441,
										72453
									],
									[
										72544,
										72556
									],
									[
										72648,
										72660
									],
									[
										72752,
										72764
									],
									[
										72855,
										72867
									],
									[
										72958,
										72970
									],
									[
										73061,
										73073
									],
									[
										73164,
										73176
									],
									[
										73267,
										73279
									],
									[
										73370,
										73382
									],
									[
										73473,
										73485
									],
									[
										73576,
										73588
									],
									[
										73680,
										73692
									],
									[
										73783,
										73795
									],
									[
										73886,
										73898
									],
									[
										73989,
										74001
									],
									[
										74092,
										74104
									],
									[
										74195,
										74207
									],
									[
										74299,
										74311
									],
									[
										74402,
										74414
									],
									[
										74505,
										74517
									],
									[
										74608,
										74620
									],
									[
										74711,
										74723
									],
									[
										74814,
										74826
									],
									[
										74917,
										74929
									],
									[
										75020,
										75032
									],
									[
										75123,
										75135
									],
									[
										75227,
										75239
									],
									[
										75330,
										75342
									],
									[
										75433,
										75445
									],
									[
										75536,
										75548
									],
									[
										75639,
										75651
									],
									[
										75744,
										75756
									],
									[
										75847,
										75859
									],
									[
										75950,
										75962
									],
									[
										76053,
										76065
									],
									[
										76156,
										76168
									],
									[
										76259,
										76271
									],
									[
										76362,
										76374
									],
									[
										76466,
										76478
									],
									[
										76570,
										76582
									],
									[
										76673,
										76685
									],
									[
										76776,
										76788
									],
									[
										76879,
										76891
									],
									[
										76982,
										76994
									],
									[
										77085,
										77097
									],
									[
										77188,
										77200
									],
									[
										77291,
										77303
									],
									[
										77394,
										77406
									],
									[
										77497,
										77509
									],
									[
										77600,
										77612
									],
									[
										77703,
										77715
									],
									[
										77807,
										77819
									],
									[
										77910,
										77922
									],
									[
										78013,
										78025
									],
									[
										78116,
										78128
									],
									[
										78219,
										78231
									],
									[
										78322,
										78334
									],
									[
										78426,
										78438
									],
									[
										78529,
										78541
									],
									[
										78632,
										78644
									],
									[
										78735,
										78747
									],
									[
										78838,
										78850
									],
									[
										78941,
										78953
									],
									[
										79044,
										79056
									],
									[
										79147,
										79159
									],
									[
										79250,
										79262
									],
									[
										79353,
										79365
									],
									[
										79456,
										79468
									],
									[
										79559,
										79571
									],
									[
										79662,
										79674
									],
									[
										79766,
										79778
									],
									[
										79869,
										79881
									],
									[
										79972,
										79984
									],
									[
										80075,
										80087
									],
									[
										80178,
										80190
									],
									[
										80281,
										80293
									],
									[
										80384,
										80396
									],
									[
										80487,
										80499
									],
									[
										80590,
										80602
									],
									[
										80694,
										80706
									],
									[
										80797,
										80809
									],
									[
										80900,
										80912
									],
									[
										81003,
										81015
									],
									[
										81106,
										81118
									],
									[
										81210,
										81222
									],
									[
										81313,
										81325
									],
									[
										81416,
										81428
									],
									[
										81519,
										81531
									],
									[
										81622,
										81634
									],
									[
										81725,
										81737
									],
									[
										81829,
										81841
									],
									[
										81932,
										81944
									],
									[
										82036,
										82048
									],
									[
										82139,
										82151
									],
									[
										82242,
										82254
									],
									[
										82345,
										82357
									],
									[
										82449,
										82461
									],
									[
										82552,
										82564
									],
									[
										82655,
										82667
									],
									[
										82758,
										82770
									],
									[
										82862,
										82874
									],
									[
										82965,
										82977
									],
									[
										83069,
										83081
									],
									[
										83172,
										83184
									],
									[
										83275,
										83287
									],
									[
										83378,
										83390
									],
									[
										83481,
										83493
									],
									[
										83584,
										83596
									],
									[
										83688,
										83700
									],
									[
										83791,
										83803
									],
									[
										83894,
										83906
									],
									[
										83997,
										84009
									],
									[
										84100,
										84112
									],
									[
										84203,
										84215
									],
									[
										84306,
										84318
									],
									[
										84409,
										84421
									],
									[
										84512,
										84524
									],
									[
										84615,
										84627
									],
									[
										84718,
										84730
									],
									[
										84821,
										84833
									],
									[
										84924,
										84936
									],
									[
										85027,
										85039
									],
									[
										85130,
										85142
									],
									[
										85233,
										85245
									],
									[
										85336,
										85348
									],
									[
										85439,
										85451
									],
									[
										85543,
										85555
									],
									[
										85647,
										85659
									],
									[
										85750,
										85762
									],
									[
										85853,
										85865
									],
									[
										85956,
										85968
									],
									[
										86059,
										86071
									],
									[
										86162,
										86174
									],
									[
										86265,
										86277
									],
									[
										86368,
										86380
									],
									[
										86471,
										86483
									],
									[
										86574,
										86586
									],
									[
										86677,
										86689
									],
									[
										86780,
										86792
									],
									[
										86883,
										86895
									],
									[
										86986,
										86998
									],
									[
										87090,
										87102
									],
									[
										87193,
										87205
									],
									[
										87296,
										87308
									],
									[
										87399,
										87411
									],
									[
										87502,
										87514
									],
									[
										87605,
										87617
									],
									[
										87708,
										87720
									],
									[
										87812,
										87824
									],
									[
										87915,
										87927
									],
									[
										88018,
										88030
									],
									[
										88121,
										88133
									],
									[
										88224,
										88236
									],
									[
										88327,
										88339
									],
									[
										88430,
										88442
									],
									[
										88533,
										88545
									],
									[
										88636,
										88648
									],
									[
										88739,
										88751
									],
									[
										88842,
										88854
									],
									[
										88945,
										88957
									],
									[
										89048,
										89060
									],
									[
										89151,
										89163
									],
									[
										89254,
										89266
									],
									[
										89357,
										89369
									],
									[
										89460,
										89472
									],
									[
										89563,
										89575
									],
									[
										89666,
										89678
									],
									[
										89769,
										89781
									],
									[
										89872,
										89884
									],
									[
										89976,
										89988
									],
									[
										90079,
										90091
									],
									[
										90182,
										90194
									],
									[
										90285,
										90297
									],
									[
										90388,
										90400
									],
									[
										90491,
										90503
									],
									[
										90594,
										90606
									],
									[
										90697,
										90709
									],
									[
										90800,
										90812
									],
									[
										90903,
										90915
									],
									[
										91006,
										91018
									],
									[
										91109,
										91121
									],
									[
										91212,
										91224
									],
									[
										91315,
										91327
									],
									[
										91418,
										91430
									],
									[
										91522,
										91534
									],
									[
										91625,
										91637
									],
									[
										91728,
										91740
									],
									[
										91831,
										91843
									],
									[
										91934,
										91946
									],
									[
										92037,
										92049
									],
									[
										92140,
										92152
									],
									[
										92243,
										92255
									],
									[
										92346,
										92358
									],
									[
										92449,
										92461
									],
									[
										92552,
										92564
									],
									[
										92655,
										92667
									],
									[
										92759,
										92771
									],
									[
										92862,
										92874
									],
									[
										92965,
										92977
									],
									[
										93068,
										93080
									],
									[
										93171,
										93183
									],
									[
										93274,
										93286
									],
									[
										93378,
										93390
									],
									[
										93481,
										93493
									],
									[
										93584,
										93596
									],
									[
										93687,
										93699
									],
									[
										93792,
										93804
									],
									[
										93896,
										93908
									],
									[
										93999,
										94011
									],
									[
										94102,
										94114
									],
									[
										94205,
										94217
									],
									[
										94309,
										94321
									],
									[
										94412,
										94424
									],
									[
										94515,
										94527
									],
									[
										94618,
										94630
									],
									[
										94721,
										94733
									],
									[
										94824,
										94836
									],
									[
										94927,
										94939
									],
									[
										95030,
										95042
									],
									[
										95133,
										95145
									],
									[
										95236,
										95248
									],
									[
										95339,
										95351
									],
									[
										95442,
										95454
									],
									[
										95545,
										95557
									],
									[
										95648,
										95660
									],
									[
										95751,
										95763
									],
									[
										95855,
										95867
									],
									[
										95958,
										95970
									],
									[
										96061,
										96073
									],
									[
										96164,
										96176
									],
									[
										96267,
										96279
									],
									[
										96370,
										96382
									],
									[
										96473,
										96485
									],
									[
										96576,
										96588
									],
									[
										96679,
										96691
									],
									[
										96782,
										96794
									],
									[
										96885,
										96897
									],
									[
										96988,
										97000
									],
									[
										97091,
										97103
									],
									[
										97194,
										97206
									],
									[
										97297,
										97309
									],
									[
										97400,
										97412
									],
									[
										97503,
										97515
									],
									[
										97606,
										97618
									],
									[
										97709,
										97721
									],
									[
										97812,
										97824
									],
									[
										97916,
										97928
									],
									[
										98019,
										98031
									],
									[
										98122,
										98134
									],
									[
										98225,
										98237
									],
									[
										98347,
										98359
									],
									[
										98554,
										98566
									],
									[
										98749,
										98761
									],
									[
										98814,
										98826
									],
									[
										98831,
										98843
									],
									[
										98871,
										98883
									],
									[
										98905,
										98917
									],
									[
										99076,
										99088
									],
									[
										99143,
										99155
									],
									[
										99213,
										99225
									],
									[
										99283,
										99295
									],
									[
										99353,
										99365
									],
									[
										99470,
										99482
									],
									[
										99590,
										99602
									],
									[
										99675,
										99687
									],
									[
										99778,
										99790
									],
									[
										99881,
										99893
									],
									[
										99984,
										99996
									],
									[
										100087,
										100099
									],
									[
										100187,
										100199
									],
									[
										100296,
										100308
									],
									[
										100407,
										100419
									],
									[
										100519,
										100531
									],
									[
										100627,
										100639
									],
									[
										100727,
										100739
									],
									[
										100834,
										100846
									],
									[
										101059,
										101072
									],
									[
										101266,
										101279
									],
									[
										101461,
										101474
									],
									[
										101543,
										101556
									],
									[
										101583,
										101596
									],
									[
										101617,
										101630
									],
									[
										101788,
										101801
									],
									[
										101855,
										101868
									],
									[
										101925,
										101938
									],
									[
										101995,
										102008
									],
									[
										102065,
										102078
									],
									[
										102203,
										102216
									],
									[
										102522,
										102526
									],
									[
										102548,
										102552
									],
									[
										102726,
										102730
									],
									[
										102920,
										102924
									],
									[
										102984,
										102988
									],
									[
										103017,
										103021
									],
									[
										103226,
										103230
									],
									[
										103301,
										103305
									],
									[
										103334,
										103338
									],
									[
										103434,
										103438
									],
									[
										103695,
										103699
									],
									[
										103915,
										103919
									],
									[
										104130,
										104134
									],
									[
										104325,
										104329
									],
									[
										104491,
										104495
									],
									[
										104635,
										104639
									],
									[
										104802,
										104806
									],
									[
										104956,
										104960
									],
									[
										105137,
										105141
									],
									[
										105304,
										105308
									],
									[
										105474,
										105478
									],
									[
										105634,
										105638
									],
									[
										105779,
										105783
									],
									[
										105807,
										105811
									],
									[
										105833,
										105837
									],
									[
										105874,
										105878
									],
									[
										106009,
										106013
									],
									[
										106028,
										106032
									],
									[
										106058,
										106062
									],
									[
										106175,
										106179
									],
									[
										106204,
										106208
									],
									[
										106332,
										106336
									],
									[
										106379,
										106383
									],
									[
										106445,
										106449
									],
									[
										106522,
										106526
									],
									[
										106540,
										106544
									],
									[
										106561,
										106565
									],
									[
										106713,
										106717
									],
									[
										106818,
										106822
									],
									[
										106914,
										106918
									],
									[
										107015,
										107019
									],
									[
										107123,
										107127
									],
									[
										107260,
										107264
									],
									[
										107454,
										107458
									],
									[
										107569,
										107573
									],
									[
										107596,
										107600
									],
									[
										107640,
										107644
									],
									[
										107685,
										107689
									],
									[
										107722,
										107726
									],
									[
										107817,
										107821
									],
									[
										107911,
										107915
									],
									[
										108012,
										108016
									],
									[
										108124,
										108128
									],
									[
										108231,
										108235
									],
									[
										108344,
										108348
									],
									[
										108451,
										108455
									],
									[
										108581,
										108585
									],
									[
										108722,
										108726
									],
									[
										108853,
										108857
									],
									[
										108936,
										108940
									],
									[
										108974,
										108978
									],
									[
										109005,
										109009
									],
									[
										109053,
										109057
									],
									[
										109090,
										109094
									],
									[
										109120,
										109124
									],
									[
										109247,
										109251
									],
									[
										109354,
										109358
									],
									[
										109448,
										109452
									],
									[
										109628,
										109632
									],
									[
										109721,
										109725
									],
									[
										109816,
										109820
									],
									[
										109878,
										109882
									],
									[
										110011,
										110015
									],
									[
										110154,
										110158
									],
									[
										110203,
										110207
									],
									[
										110315,
										110319
									],
									[
										110347,
										110351
									],
									[
										110433,
										110437
									],
									[
										110468,
										110472
									],
									[
										110500,
										110504
									],
									[
										110687,
										110691
									],
									[
										110800,
										110804
									],
									[
										110947,
										110951
									],
									[
										110989,
										110993
									],
									[
										111010,
										111014
									],
									[
										111055,
										111059
									],
									[
										111228,
										111232
									],
									[
										111265,
										111269
									],
									[
										111287,
										111291
									],
									[
										111317,
										111321
									],
									[
										111358,
										111362
									],
									[
										111411,
										111415
									],
									[
										111480,
										111484
									],
									[
										111582,
										111586
									],
									[
										111722,
										111726
									],
									[
										111796,
										111800
									],
									[
										111977,
										111981
									],
									[
										112134,
										112138
									],
									[
										112217,
										112221
									],
									[
										112278,
										112282
									],
									[
										112299,
										112303
									],
									[
										112330,
										112334
									],
									[
										112399,
										112403
									],
									[
										112421,
										112425
									],
									[
										112515,
										112519
									],
									[
										112527,
										112531
									],
									[
										112543,
										112547
									],
									[
										112590,
										112594
									],
									[
										112630,
										112634
									],
									[
										112658,
										112662
									],
									[
										112684,
										112688
									],
									[
										112697,
										112701
									],
									[
										112728,
										112732
									],
									[
										112757,
										112761
									],
									[
										112835,
										112839
									],
									[
										112871,
										112875
									],
									[
										112902,
										112906
									],
									[
										112933,
										112937
									],
									[
										112946,
										112950
									],
									[
										112978,
										112982
									],
									[
										113003,
										113007
									],
									[
										113029,
										113033
									],
									[
										113060,
										113064
									],
									[
										113073,
										113077
									],
									[
										113099,
										113103
									],
									[
										113131,
										113135
									],
									[
										113207,
										113211
									],
									[
										113339,
										113343
									],
									[
										113388,
										113392
									],
									[
										113495,
										113499
									],
									[
										113550,
										113554
									],
									[
										113647,
										113651
									],
									[
										113671,
										113675
									],
									[
										113811,
										113815
									],
									[
										113999,
										114005
									],
									[
										114133,
										114139
									],
									[
										114238,
										114244
									],
									[
										114334,
										114340
									],
									[
										114435,
										114441
									],
									[
										114570,
										114576
									],
									[
										114764,
										114770
									],
									[
										114879,
										114885
									],
									[
										114964,
										114970
									],
									[
										115071,
										115077
									],
									[
										115184,
										115190
									],
									[
										115291,
										115297
									],
									[
										115421,
										115427
									],
									[
										115562,
										115568
									],
									[
										115693,
										115699
									],
									[
										115786,
										115792
									],
									[
										115869,
										115875
									],
									[
										115956,
										115962
									],
									[
										115984,
										115990
									],
									[
										116067,
										116073
									],
									[
										116089,
										116095
									],
									[
										116183,
										116189
									],
									[
										116323,
										116329
									],
									[
										116397,
										116403
									],
									[
										116531,
										116537
									],
									[
										116714,
										116722
									],
									[
										116869,
										116877
									],
									[
										116883,
										116891
									],
									[
										116920,
										116928
									],
									[
										116969,
										116977
									],
									[
										117088,
										117096
									],
									[
										117142,
										117150
									],
									[
										117178,
										117186
									],
									[
										117227,
										117235
									],
									[
										117263,
										117271
									],
									[
										117322,
										117330
									],
									[
										117385,
										117393
									],
									[
										117456,
										117464
									],
									[
										117518,
										117526
									],
									[
										117597,
										117605
									],
									[
										117643,
										117651
									],
									[
										117729,
										117737
									],
									[
										117919,
										117927
									],
									[
										118109,
										118117
									],
									[
										118217,
										118225
									],
									[
										118270,
										118278
									],
									[
										118328,
										118336
									],
									[
										118370,
										118378
									],
									[
										118467,
										118475
									],
									[
										118552,
										118560
									],
									[
										118580,
										118588
									],
									[
										118674,
										118682
									],
									[
										118810,
										118818
									],
									[
										118848,
										118856
									],
									[
										119052,
										119060
									],
									[
										119090,
										119098
									],
									[
										119286,
										119294
									],
									[
										119324,
										119332
									],
									[
										119467,
										119475
									],
									[
										119499,
										119507
									],
									[
										119572,
										119580
									],
									[
										119616,
										119624
									],
									[
										119683,
										119691
									],
									[
										119751,
										119759
									],
									[
										119820,
										119828
									],
									[
										119883,
										119891
									],
									[
										120004,
										120012
									],
									[
										120068,
										120076
									],
									[
										120229,
										120237
									],
									[
										120261,
										120269
									],
									[
										120340,
										120348
									],
									[
										120409,
										120417
									],
									[
										120446,
										120454
									],
									[
										120474,
										120482
									],
									[
										120531,
										120539
									],
									[
										120687,
										120695
									],
									[
										120760,
										120768
									],
									[
										120798,
										120806
									],
									[
										120822,
										120830
									],
									[
										120957,
										120965
									],
									[
										121067,
										121075
									],
									[
										121126,
										121134
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								116719,
								116719
							]
						],
						"settings":
						{
							"default_dir": "/Users/manu/git/monee-novelty",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 21,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 47329.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/manu/git/monee-novelty/include/core/WorldModels/RobotAgentWorldModel.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3805,
						"regions":
						{
						},
						"selection":
						[
							[
								1067,
								1083
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 445.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/manu/git/monee-novelty/config/default.properties",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13334,
						"regions":
						{
						},
						"selection":
						[
							[
								1191,
								1191
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/JavaProperties.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 977.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "roborobo.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52532,
						"regions":
						{
						},
						"selection":
						[
							[
								27383,
								27383
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 23021.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/manu/git/monee-novelty/include/core/RoboroboMain/roborobo.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11277,
						"regions":
						{
						},
						"selection":
						[
							[
								909,
								909
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsControlArchitecture.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25369,
						"regions":
						{
						},
						"selection":
						[
							[
								19091,
								19116
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 9145.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/manu/git/monee-novelty/prj/SimpleShells/src/SimpleShellsAgentWorldModel.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3668,
						"regions":
						{
						},
						"selection":
						[
							[
								3230,
								3230
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1255.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 51.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 254.0
	},
	"output.find_results":
	{
		"height": 132.0
	},
	"pinned_build_system": "",
	"project": "tabs.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 320.0,
		"last_filter": "Puck",
		"selected_items":
		[
			[
				"Puck",
				"Puck"
			]
		],
		"width": 363.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 287.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
